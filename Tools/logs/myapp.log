11/05/23 23:52:01 :: ===================================================== 
11/05/23 23:52:01 :: // Appel de la method handleAuth de authController // 
11/05/23 23:52:01 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
11/05/23 23:52:01 :: XX Pas de cookie accessToken reçu. 
11/05/23 23:52:01 :: // Appel de la method selectOneArticle de compareController// 
11/05/23 23:52:01 :: Yo la PRE category=  undefined 
11/05/23 23:52:01 :: Yo le Id_article_to_find a trouver :  2 
11/05/23 23:52:01 :: Yo la POST category=   
11/05/23 23:52:01 :: yo la table sera :  
11/05/23 23:52:01 :: yo la requete sera : 
    SELECT *
    FROM article
    JOIN model ON article.Id_model = model.Id_model
    JOIN category ON model.Id_category = category.Id_category
    
    WHERE article.Id_article = ?;
   
11/05/23 23:52:01 :: // Appel de la method QUERY de database.service. // 
11/05/23 23:52:01 :: new connexion made sur la database: pccompare 
11/05/23 23:52:01 :: // Appel de la method shaForOneArticle de compareController// 
11/05/23 23:52:01 :: // Appel de la method QUERY de database.service. // 
11/05/23 23:52:01 :: new connexion made sur la database: pccompare 
11/05/23 23:52:01 :: // Appel de la method historiqueForOneArticle de compareController// 
11/05/23 23:52:01 :: // Appel de la method QUERY de database.service. // 
11/05/23 23:52:01 :: new connexion made sur la database: pccompare 
11/05/23 23:52:01 :: // Appel de la method sellerForOneArticle de compareController// 
11/05/23 23:52:01 :: new connexion made sur la database: pccompare 
11/05/23 23:52:01 :: // Appel de la method QUERY de database.service. // 
11/05/23 23:52:01 :: // Appel de la method selectCommentsByIdArticle de compareController// 
11/05/23 23:52:01 :: new connexion made sur la database: pccompare 
11/05/23 23:52:01 :: // Appel de la method QUERY de database.service. // 
11/05/23 23:52:01 :: => Requete appelée: 
    SELECT *
    FROM article
    JOIN model ON article.Id_model = model.Id_model
    JOIN category ON model.Id_category = category.Id_category
    
    WHERE article.Id_article = ?;
   
11/05/23 23:52:01 :: ==>Retour de la requete: [
  [
    {
      Id_article: 2,
      product_number: 'GV-N4090GAMING OC-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9743-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique'
    }
  ]
] 
11/05/23 23:52:01 :: => Requete appelée: 
  SELECT *
  FROM seller_historique_article
  WHERE seller_historique_article.Id_article = ?;
 
11/05/23 23:52:01 :: ---> Sortie de la method QUERY de database.service. // 
11/05/23 23:52:01 :: ==>Retour de la requete: [
  [
    { Id_article: 2, Id_seller: 1, Id_historique_prix: 16 },
    { Id_article: 2, Id_seller: 1, Id_historique_prix: 17 },
    { Id_article: 2, Id_seller: 1, Id_historique_prix: 18 },
    { Id_article: 2, Id_seller: 1, Id_historique_prix: 19 },
    { Id_article: 2, Id_seller: 1, Id_historique_prix: 20 },
    { Id_article: 2, Id_seller: 2, Id_historique_prix: 21 },
    { Id_article: 2, Id_seller: 2, Id_historique_prix: 22 },
    { Id_article: 2, Id_seller: 2, Id_historique_prix: 23 },
    { Id_article: 2, Id_seller: 2, Id_historique_prix: 24 },
    { Id_article: 2, Id_seller: 2, Id_historique_prix: 25 },
    { Id_article: 2, Id_seller: 3, Id_historique_prix: 26 },
    { Id_article: 2, Id_seller: 3, Id_historique_prix: 27 },
    { Id_article: 2, Id_seller: 3, Id_historique_prix: 28 },
    { Id_article: 2, Id_seller: 3, Id_historique_prix: 29 },
    { Id_article: 2, Id_seller: 3, Id_historique_prix: 30 }
  ]
] 
11/05/23 23:52:01 :: => Requete appelée: 
  SELECT DISTINCT seller.Id_seller, seller.seller_name, seller.img_src_seller, seller.img_alt_seller
  FROM seller
  JOIN (
     SELECT DISTINCT Id_seller
     FROM seller_historique_article
     WHERE Id_article = ?
  ) AS sha ON seller.Id_seller = sha.Id_seller;  
 
11/05/23 23:52:01 :: ---> Sortie de la method QUERY de database.service. // 
11/05/23 23:52:01 :: ==>Retour de la requete: [
  [
    {
      Id_seller: 1,
      seller_name: 'LDLC',
      img_src_seller: 'https://upload.wikimedia.org/wikipedia/fr/c/c7/LDLC_logo.jpg',
      img_alt_seller: 'LDLC logo'
    },
    {
      Id_seller: 2,
      seller_name: 'Amazon',
      img_src_seller: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/langfr-1920px-Amazon_logo.svg.png',
      img_alt_seller: 'Amazon logo'
    },
    {
      Id_seller: 3,
      seller_name: 'TopAchat',
      img_src_seller: 'https://upload.wikimedia.org/wikipedia/fr/1/14/Logo-topachat_200.jpg',
      img_alt_seller: 'TopAchat logo'
    }
  ]
] 
11/05/23 23:52:01 :: ---> Sortie de la method shaForOneArticle de compareController // 
11/05/23 23:52:01 :: ---> Sortie de la method sellerForOneArticle de compareController // 
11/05/23 23:52:01 :: ==>Retour de la requete: [
  [
    {
      Id_historique_prix: 16,
      price: 810,
      _date: 2023-04-04T22:00:00.000Z
    },
    {
      Id_historique_prix: 17,
      price: 810,
      _date: 2023-01-31T23:00:00.000Z
    },
    {
      Id_historique_prix: 18,
      price: 735,
      _date: 2023-02-01T23:00:00.000Z
    },
    {
      Id_historique_prix: 19,
      price: 725,
      _date: 2023-02-02T23:00:00.000Z
    },
    {
      Id_historique_prix: 20,
      price: 638,
      _date: 2023-02-03T23:00:00.000Z
    },
    {
      Id_historique_prix: 21,
      price: 848,
      _date: 2023-03-03T23:00:00.000Z
    },
    {
      Id_historique_prix: 22,
      price: 952,
      _date: 2023-04-03T22:00:00.000Z
    },
    {
      Id_historique_prix: 23,
      price: 942,
      _date: 2023-03-03T23:00:00.000Z
    },
    {
      Id_historique_prix: 24,
      price: 856,
      _date: 2023-04-03T22:00:00.000Z
    },
    {
      Id_historique_prix: 25,
      price: 685,
      _date: 2023-02-03T23:00:00.000Z
    },
    {
      Id_historique_prix: 26,
      price: 638,
      _date: 2023-03-10T23:00:00.000Z
    },
    {
      Id_historique_prix: 27,
      price: 698,
      _date: 2023-05-11T22:00:00.000Z
    },
    {
      Id_historique_prix: 28,
      price: 788,
      _date: 2023-05-27T22:00:00.000Z
    },
    {
      Id_historique_prix: 29,
      price: 988,
      _date: 2023-03-31T22:00:00.000Z
    },
    {
      Id_historique_prix: 30,
      price: 1250,
      _date: 2023-04-04T22:00:00.000Z
    }
  ]
] 
11/05/23 23:52:01 :: => Requete appelée: 
  SELECT historique_prix.Id_historique_prix, historique_prix.price, historique_prix._date
FROM seller_historique_article
JOIN historique_prix ON historique_prix.Id_historique_prix = seller_historique_article.Id_historique_prix
WHERE seller_historique_article.Id_article = ?;
 
11/05/23 23:52:01 :: ---> Sortie de la method QUERY de database.service. // 
11/05/23 23:52:01 :: ---> Sortie de la method historiqueForOneArticle de compareController // 
11/05/23 23:52:01 :: ---> Sortie de la method selectOneArticle de compareController // 
11/05/23 23:52:01 :: ---> Sortie de la method QUERY de database.service. // 
11/05/23 23:52:01 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
11/05/23 23:52:01 :: // Appel de la method handleRefreshToken de refreshTokenController // 
11/05/23 23:52:01 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
11/05/23 23:52:01 :: => Requete appelée: 
  SELECT * FROM comment WHERE Id_article = ?
 
11/05/23 23:52:01 :: XX Pas de cookie refreshToken reçu. 
11/05/23 23:52:01 :: ==>Retour de la requete: [
  [
    {
      Id_comment: 4,
      content: 'This product is really good. Highly recommended!',
      note: 2,
      createdBy: 'TestPseudo_42',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-19T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 420,
      Id_article: 2
    },
    {
      Id_comment: 5,
      content: 'Not bad for the price. Does the job.',
      note: 2,
      createdBy: 'TestPseudo_510',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-15T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 960,
      Id_article: 2
    },
    {
      Id_comment: 6,
      content: 'I would not recommend this product. Had a lot of issues.',
      note: 2,
      createdBy: 'TestPseudo_656',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-14T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 816,
      Id_article: 2
    }
  ]
] 
11/05/23 23:52:01 :: ---> Sortie de la method QUERY de database.service. // 
11/05/23 23:52:01 :: ---> Sortie de la method selectCommentsByIdArticle de compareController // 
11/05/23 23:52:01 :: // Appel de la method selectAvatarByIdComment de compareController// 
11/05/23 23:52:01 :: // Appel de la method QUERY de database.service. // 
11/05/23 23:52:01 :: // Appel de la method QUERY de database.service. // 
11/05/23 23:52:01 :: // Appel de la method selectAvatarByIdComment de compareController// 
11/05/23 23:52:01 :: // Appel de la method selectAvatarByIdComment de compareController// 
11/05/23 23:52:01 :: // Appel de la method QUERY de database.service. // 
11/05/23 23:52:01 :: => Requete appelée: 
  SELECT c.img_src, c.Id_customer
  FROM customer c
  JOIN comment cm ON c.Id_customer = cm.Id_customer
  WHERE cm.Id_comment = ?;
 
11/05/23 23:52:01 :: ==>Retour de la requete: [ [] ] 
11/05/23 23:52:01 :: ---> Sortie de la method QUERY de database.service. // 
11/05/23 23:52:01 :: ---> Sortie de la method selectAvatarByIdComment de compareController // 
11/05/23 23:52:01 :: => Requete appelée: 
  SELECT c.img_src, c.Id_customer
  FROM customer c
  JOIN comment cm ON c.Id_customer = cm.Id_customer
  WHERE cm.Id_comment = ?;
 
11/05/23 23:52:01 :: ==>Retour de la requete: [ [] ] 
11/05/23 23:52:01 :: ---> Sortie de la method selectAvatarByIdComment de compareController // 
11/05/23 23:52:01 :: ---> Sortie de la method QUERY de database.service. // 
11/05/23 23:52:01 :: => Requete appelée: 
  SELECT c.img_src, c.Id_customer
  FROM customer c
  JOIN comment cm ON c.Id_customer = cm.Id_customer
  WHERE cm.Id_comment = ?;
 
11/05/23 23:52:01 :: ==>Retour de la requete: [ [] ] 
11/05/23 23:52:01 :: ---> Sortie de la method selectAvatarByIdComment de compareController // 
11/05/23 23:52:01 :: ---> Sortie de la method QUERY de database.service. // 
