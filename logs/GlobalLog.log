24/05/23 19:56:45 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 19:56:45 :: --> Test de la disponibilité du pseudo:  Secut 
24/05/23 19:56:45 :: // Appel de la method QUERY de database.service. // 
24/05/23 19:56:45 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 19:56:45 :: ==>Retour de la requete: [ [] ] 
24/05/23 19:56:45 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 19:56:45 :: !! Le pseudo Secut est disponible. 
24/05/23 19:57:18 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 19:57:21 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 19:57:23 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 19:57:23 :: --> Test de la disponibilité du pseudo:  Secut 
24/05/23 19:57:23 :: // Appel de la method QUERY de database.service. // 
24/05/23 19:57:23 :: Nouvelle connection sur la database: pccompare 
24/05/23 19:57:23 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 19:57:23 :: ==>Retour de la requete: [ [] ] 
24/05/23 19:57:23 :: !! Le pseudo Secut est disponible. 
24/05/23 19:57:23 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 19:57:23 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 19:57:23 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 19:57:23 :: => avec les données suivantes :  {
  firstname: 'aaaaaaa',
  lastname: 'bbbbbbbb',
  pseudo: 'Secut',
  email: 'maxoa59@gmail.com',
  password: '1234',
  password2: '1234'
} 
24/05/23 19:57:23 :: // Tentative d'envoi de mail : // 
24/05/23 19:57:24 :: §§ MAIL :  Envoyé 
24/05/23 19:57:24 :: Verification email sent to maxoa59@gmail.com 
24/05/23 19:57:24 :: le retourMailer est = à: {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 128,
    messageTime: 568,
    messageSize: 2168,
    response: '250 2.0.0 OK  1684951043 m2-20020adffe42000000b002feea065cc9sm15102900wrs.111 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<9e579e47-f12f-859a-96e3-cba6c5442a85@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 19:58:59 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 19:58:59 :: --> Test de la disponibilité du pseudo:  Secu 
24/05/23 19:58:59 :: // Appel de la method QUERY de database.service. // 
24/05/23 19:58:59 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 19:58:59 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T17:44:19.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
    }
  ]
] 
24/05/23 19:58:59 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 19:58:59 :: !! Le pseudo Secu n'est pas disponible. 
24/05/23 19:58:59 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 19:58:59 :: => avec les données suivantes :  {
  firstname: 'aaaaaaa',
  lastname: 'bbbbbbbb',
  pseudo: 'Secu',
  email: 'maxoa59@gmail.com',
  password: '1234',
  password2: '1234'
} 
24/05/23 19:58:59 :: // Tentative d'envoi de mail : // 
24/05/23 19:58:59 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 19:59:00 :: §§ MAIL :  Envoyé 
24/05/23 19:59:00 :: le retourMailer est = à: {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 59,
    messageTime: 296,
    messageSize: 2167,
    response: '250 2.0.0 OK  1684951139 i12-20020adffc0c000000b003063db8f45bsm15153953wrr.23 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<1b94fe6b-b12d-9572-1afc-9adff0d81a45@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 19:59:00 :: Verification email sent to maxoa59@gmail.com 
24/05/23 19:59:05 :: --> Test de la disponibilité du pseudo:  Secu 
24/05/23 19:59:05 :: // Appel de la method QUERY de database.service. // 
24/05/23 19:59:05 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 19:59:05 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T17:44:19.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
    }
  ]
] 
24/05/23 19:59:05 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 19:59:05 :: !! Le pseudo Secu n'est pas disponible. 
24/05/23 19:59:05 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 19:59:05 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 19:59:05 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 19:59:05 :: => avec les données suivantes :  {
  firstname: 'aaaaaaa',
  lastname: 'bbbbbbbb',
  pseudo: 'Secu',
  email: 'maxoa59@gmail.com',
  password: '1234',
  password2: '1234'
} 
24/05/23 19:59:05 :: // Tentative d'envoi de mail : // 
24/05/23 19:59:05 :: §§ MAIL :  Envoyé 
24/05/23 19:59:05 :: le retourMailer est = à: {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 65,
    messageTime: 281,
    messageSize: 2167,
    response: '250 2.0.0 OK  1684951145 2-20020a05600c020200b003f50e29bce3sm3032255wmi.48 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<e1d52f01-2fe8-fbd4-229f-e0c9078b7014@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 19:59:05 :: Verification email sent to maxoa59@gmail.com 
24/05/23 19:59:19 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 19:59:21 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 19:59:21 :: --> Test de la disponibilité du pseudo:  Secu 
24/05/23 19:59:21 :: // Appel de la method QUERY de database.service. // 
24/05/23 19:59:21 :: Nouvelle connection sur la database: pccompare 
24/05/23 19:59:21 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T17:44:19.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
    }
  ]
] 
24/05/23 19:59:21 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 19:59:21 :: !! Le pseudo Secu n'est pas disponible. 
24/05/23 19:59:21 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:01:52 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:01:52 :: --> Test de la disponibilité du pseudo:  Secu 
24/05/23 20:01:52 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:01:52 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:01:52 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T17:44:19.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
    }
  ]
] 
24/05/23 20:01:52 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:01:52 :: !! Le pseudo Secu n'est pas disponible. 
24/05/23 20:01:57 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:01:57 :: --> Test de la disponibilité du pseudo:  Secut 
24/05/23 20:01:57 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:01:57 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:01:57 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:01:57 :: ==>Retour de la requete: [ [] ] 
24/05/23 20:01:57 :: !! Le pseudo Secut est disponible. 
24/05/23 20:01:57 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 20:01:57 :: => avec les données suivantes :  {
  firstname: 'aaaaaaa',
  lastname: 'bbbbbbbb',
  pseudo: 'Secut',
  email: 'maxoa59@gmail.com',
  password: '1234',
  password2: '1234'
} 
24/05/23 20:01:57 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 20:01:58 :: // Tentative d'envoi de mail : // 
24/05/23 20:01:58 :: §§ MAIL :  Envoyé 
24/05/23 20:01:58 :: le retourMailer est = à: {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 67,
    messageTime: 288,
    messageSize: 2168,
    response: '250 2.0.0 OK  1684951318 m5-20020a7bcb85000000b003f60faa4612sm3068376wmi.22 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<77ae608f-9a7d-6f25-5e79-34d70afdbb87@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 20:01:58 :: Verification email sent to maxoa59@gmail.com 
24/05/23 20:03:28 :: ===================================================== 
24/05/23 20:03:28 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:03:28 :: // Appel de la method handleAuth de authController // 
24/05/23 20:03:28 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:03:28 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:03:28 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:03:28 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:03:28 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:03:28 :: ===================================================== 
24/05/23 20:03:28 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:03:28 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:03:28 :: // Appel de la method handleAuth de authController // 
24/05/23 20:03:28 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:03:28 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:03:28 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:03:28 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:04:13 :: ===================================================== 
24/05/23 20:04:13 :: // Appel de la method handleAuth de authController // 
24/05/23 20:04:13 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:04:13 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:04:13 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:04:13 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:04:13 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:04:13 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:04:13 :: ===================================================== 
24/05/23 20:04:13 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:04:13 :: // Appel de la method handleAuth de authController // 
24/05/23 20:04:13 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:04:13 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:04:13 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:04:13 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:04:13 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:04:37 :: ===================================================== 
24/05/23 20:04:37 :: // Appel de la method handleAuth de authController // 
24/05/23 20:04:37 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:04:37 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:04:37 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:04:37 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:04:37 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:04:37 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:04:38 :: ===================================================== 
24/05/23 20:04:38 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:04:38 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:04:38 :: // Appel de la method handleAuth de authController // 
24/05/23 20:04:38 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:04:38 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:04:38 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:04:38 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:04:39 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 20:04:39 :: // Appel de la method handleLogin de loginController // 
24/05/23 20:04:39 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:04:39 :: ==>Retour de la requete: [
  [
    {
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T17:44:19.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg',
      title: 'Administrateur'
    }
  ]
] 
24/05/23 20:04:39 :: ?? L'account trouvé est: {
  email: 'maxoa59@gmail.com',
  password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi'
} 
24/05/23 20:04:39 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:04:39 :: ?? Le customer trouvé est: {
  Id_account: 6,
  Id_customer: 6,
  Id_role: 3,
  pseudo: 'Secu',
  firstname: 'Maxence',
  lastname: 'ALLART',
  last_connection: 2023-05-24T17:44:19.000Z,
  createdBy: 'site',
  createdAt: 2023-04-26T22:00:00.000Z,
  modifiedBy: 'Secutorz',
  modifiedAt: 2023-05-20T22:00:00.000Z,
  deletedBy: null,
  deletedAt: null,
  img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
} 
24/05/23 20:04:39 :: => Requete appelée:         
      SELECT account.email, account.password, customer.*, role.*
      FROM account
      JOIN customer ON account.Id_account = customer.Id_account
      JOIN role ON customer.Id_role = role.Id_role
      WHERE account.email = ?
       
24/05/23 20:04:39 :: ?? Le role trouvé est: { title: 'Administrateur' } 
24/05/23 20:04:39 :: !! Comparons le mots de passe reçu le résultat est : true 
24/05/23 20:04:39 :: ?? Tentative de mise à jour de la last_connection 
24/05/23 20:04:39 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:04:39 :: => Requete appelée: 
      UPDATE customer
      SET last_connection = NOW()
      WHERE Id_customer = ?;
       
24/05/23 20:04:39 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: 'Enregistrements correspondants: 1  Modifiés: 1  Warnings: 0',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 20:04:39 :: --> last_connection mis à jour avec succès. 
24/05/23 20:04:39 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:04:39 :: !! L'objet préparé pour le retour au Front est le suivant : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: 2023-05-24T17:44:19.000Z,
    createdBy: 'site',
    createdAt: 2023-04-26T22:00:00.000Z,
    modifiedBy: 'Secutorz',
    modifiedAt: 2023-05-20T22:00:00.000Z,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur'
} 
24/05/23 20:04:39 :: ?? Pour information, un accessToken a été créé pour 1h : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTc6NDQ6MTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNDc5LCJleHAiOjE2ODQ5NTUwNzl9.xuXglbt2Mgn0OapFlH4BNu5H7e9wEc9jW4L4QM59Wkg 
24/05/23 20:04:39 :: ?? Pour information, un refreshToken a été créé pour 10d : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTc6NDQ6MTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNDc5LCJleHAiOjE2ODU4MTU0Nzl9.UWN0-7mMWHD9y_AzV0mdj2TecxXFoMfDtF12sFaHtiM 
24/05/23 20:04:39 :: ==> Login avec succes ! Envoi du refreshToken en cookie, envoi des données + envoi du accessToken. 
24/05/23 20:04:39 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:04:39 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:04:39 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:04:39 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:04:39 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:04:39 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:04:50 :: ===================================================== 
24/05/23 20:04:50 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTc6NDQ6MTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNDc5LCJleHAiOjE2ODQ5NTUwNzl9.xuXglbt2Mgn0OapFlH4BNu5H7e9wEc9jW4L4QM59Wkg 
24/05/23 20:04:50 :: // Appel de la method handleAuth de authController // 
24/05/23 20:04:50 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:04:50 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:04:50 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:04:50 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:04:50 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:04:50 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:04:50 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:04:50 :: ===================================================== 
24/05/23 20:04:50 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTc6NDQ6MTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNDc5LCJleHAiOjE2ODQ5NTUwNzl9.xuXglbt2Mgn0OapFlH4BNu5H7e9wEc9jW4L4QM59Wkg 
24/05/23 20:04:50 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:04:50 :: // Appel de la method handleAuth de authController // 
24/05/23 20:04:50 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:04:50 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:04:50 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:04:50 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:04:50 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:04:50 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:20 :: ===================================================== 
24/05/23 20:05:20 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:20 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTc6NDQ6MTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNDc5LCJleHAiOjE2ODQ5NTUwNzl9.xuXglbt2Mgn0OapFlH4BNu5H7e9wEc9jW4L4QM59Wkg 
24/05/23 20:05:20 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:20 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:20 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:20 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:20 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:20 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:20 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:21 :: ===================================================== 
24/05/23 20:05:21 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:21 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTc6NDQ6MTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNDc5LCJleHAiOjE2ODQ5NTUwNzl9.xuXglbt2Mgn0OapFlH4BNu5H7e9wEc9jW4L4QM59Wkg 
24/05/23 20:05:21 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:21 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:21 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:21 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:21 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:21 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:21 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:22 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:22 :: ===================================================== 
24/05/23 20:05:22 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTc6NDQ6MTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNDc5LCJleHAiOjE2ODQ5NTUwNzl9.xuXglbt2Mgn0OapFlH4BNu5H7e9wEc9jW4L4QM59Wkg 
24/05/23 20:05:22 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:22 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:22 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:22 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:22 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:22 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:22 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:23 :: ===================================================== 
24/05/23 20:05:23 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTc6NDQ6MTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNDc5LCJleHAiOjE2ODQ5NTUwNzl9.xuXglbt2Mgn0OapFlH4BNu5H7e9wEc9jW4L4QM59Wkg 
24/05/23 20:05:23 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:23 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:23 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:23 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:23 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:23 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:23 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:23 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:24 :: // Appel de la method handleLogout de loginController // 
24/05/23 20:05:24 :: ------------------------------------------------------- 
24/05/23 20:05:24 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: '2023-05-24T17:44:19.000Z',
    createdBy: 'site',
    createdAt: '2023-04-26T22:00:00.000Z',
    modifiedBy: 'Secutorz',
    modifiedAt: '2023-05-20T22:00:00.000Z',
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur',
  iat: 1684951479,
  exp: 1685815479
} 
24/05/23 20:05:26 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 20:05:26 :: // Appel de la method handleLogin de loginController // 
24/05/23 20:05:26 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:26 :: ==>Retour de la requete: [
  [
    {
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T18:04:39.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg',
      title: 'Administrateur'
    }
  ]
] 
24/05/23 20:05:26 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:26 :: ?? L'account trouvé est: {
  email: 'maxoa59@gmail.com',
  password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi'
} 
24/05/23 20:05:26 :: ?? Le customer trouvé est: {
  Id_account: 6,
  Id_customer: 6,
  Id_role: 3,
  pseudo: 'Secu',
  firstname: 'Maxence',
  lastname: 'ALLART',
  last_connection: 2023-05-24T18:04:39.000Z,
  createdBy: 'site',
  createdAt: 2023-04-26T22:00:00.000Z,
  modifiedBy: 'Secutorz',
  modifiedAt: 2023-05-20T22:00:00.000Z,
  deletedBy: null,
  deletedAt: null,
  img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
} 
24/05/23 20:05:26 :: ?? Le role trouvé est: { title: 'Administrateur' } 
24/05/23 20:05:26 :: => Requete appelée:         
      SELECT account.email, account.password, customer.*, role.*
      FROM account
      JOIN customer ON account.Id_account = customer.Id_account
      JOIN role ON customer.Id_role = role.Id_role
      WHERE account.email = ?
       
24/05/23 20:05:26 :: !! Comparons le mots de passe reçu le résultat est : true 
24/05/23 20:05:26 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:26 :: ?? Tentative de mise à jour de la last_connection 
24/05/23 20:05:26 :: => Requete appelée: 
      UPDATE customer
      SET last_connection = NOW()
      WHERE Id_customer = ?;
       
24/05/23 20:05:26 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: 'Enregistrements correspondants: 1  Modifiés: 1  Warnings: 0',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 20:05:26 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:26 :: --> last_connection mis à jour avec succès. 
24/05/23 20:05:26 :: !! L'objet préparé pour le retour au Front est le suivant : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: 2023-05-24T18:04:39.000Z,
    createdBy: 'site',
    createdAt: 2023-04-26T22:00:00.000Z,
    modifiedBy: 'Secutorz',
    modifiedAt: 2023-05-20T22:00:00.000Z,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur'
} 
24/05/23 20:05:26 :: ?? Pour information, un accessToken a été créé pour 1h : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDQ6MzkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTI2LCJleHAiOjE2ODQ5NTUxMjZ9.FrNND1qoeqEZBJsy-bOyTkodVkZHByB8Nmui29MY-iY 
24/05/23 20:05:26 :: ?? Pour information, un refreshToken a été créé pour 10d : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDQ6MzkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTI2LCJleHAiOjE2ODU4MTU1MjZ9.XTbDWHdJ-IZo3QrVlAAehbs7kh8F_EgKOeMY9kAQ6Vw 
24/05/23 20:05:26 :: ==> Login avec succes ! Envoi du refreshToken en cookie, envoi des données + envoi du accessToken. 
24/05/23 20:05:26 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:26 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:26 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:26 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:26 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:26 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:33 :: ===================================================== 
24/05/23 20:05:33 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:33 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDQ6MzkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTI2LCJleHAiOjE2ODQ5NTUxMjZ9.FrNND1qoeqEZBJsy-bOyTkodVkZHByB8Nmui29MY-iY 
24/05/23 20:05:33 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:33 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:33 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:33 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:33 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:33 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:33 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:34 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:34 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDQ6MzkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTI2LCJleHAiOjE2ODQ5NTUxMjZ9.FrNND1qoeqEZBJsy-bOyTkodVkZHByB8Nmui29MY-iY 
24/05/23 20:05:34 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:34 :: ===================================================== 
24/05/23 20:05:34 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:34 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:34 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:34 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:34 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:34 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:44 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:44 :: ===================================================== 
24/05/23 20:05:44 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:44 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDQ6MzkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTI2LCJleHAiOjE2ODQ5NTUxMjZ9.FrNND1qoeqEZBJsy-bOyTkodVkZHByB8Nmui29MY-iY 
24/05/23 20:05:44 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:44 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:44 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:44 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:44 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:44 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:45 :: ===================================================== 
24/05/23 20:05:45 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDQ6MzkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTI2LCJleHAiOjE2ODQ5NTUxMjZ9.FrNND1qoeqEZBJsy-bOyTkodVkZHByB8Nmui29MY-iY 
24/05/23 20:05:45 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:45 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:45 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:45 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:45 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:45 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:45 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:45 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:46 :: ===================================================== 
24/05/23 20:05:46 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDQ6MzkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTI2LCJleHAiOjE2ODQ5NTUxMjZ9.FrNND1qoeqEZBJsy-bOyTkodVkZHByB8Nmui29MY-iY 
24/05/23 20:05:46 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:46 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 20:05:46 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:46 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:46 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:46 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:46 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:05:46 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:47 :: ------------------------------------------------------- 
24/05/23 20:05:47 :: // Appel de la method handleLogout de loginController // 
24/05/23 20:05:47 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: '2023-05-24T18:04:39.000Z',
    createdBy: 'site',
    createdAt: '2023-04-26T22:00:00.000Z',
    modifiedBy: 'Secutorz',
    modifiedAt: '2023-05-20T22:00:00.000Z',
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur',
  iat: 1684951526,
  exp: 1685815526
} 
24/05/23 20:05:58 :: ===================================================== 
24/05/23 20:05:58 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:58 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:05:58 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:05:58 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:05:58 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:05:58 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:05:58 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:05:58 :: ===================================================== 
24/05/23 20:05:58 :: // Appel de la method handleAuth de authController // 
24/05/23 20:05:58 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:05:58 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:05:58 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:05:58 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:05:58 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:05:58 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:05:59 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 20:05:59 :: // Appel de la method handleLogin de loginController // 
24/05/23 20:05:59 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:59 :: => Requete appelée:         
      SELECT account.email, account.password, customer.*, role.*
      FROM account
      JOIN customer ON account.Id_account = customer.Id_account
      JOIN role ON customer.Id_role = role.Id_role
      WHERE account.email = ?
       
24/05/23 20:05:59 :: ==>Retour de la requete: [
  [
    {
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T18:05:26.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg',
      title: 'Administrateur'
    }
  ]
] 
24/05/23 20:05:59 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:59 :: ?? L'account trouvé est: {
  email: 'maxoa59@gmail.com',
  password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi'
} 
24/05/23 20:05:59 :: ?? Le customer trouvé est: {
  Id_account: 6,
  Id_customer: 6,
  Id_role: 3,
  pseudo: 'Secu',
  firstname: 'Maxence',
  lastname: 'ALLART',
  last_connection: 2023-05-24T18:05:26.000Z,
  createdBy: 'site',
  createdAt: 2023-04-26T22:00:00.000Z,
  modifiedBy: 'Secutorz',
  modifiedAt: 2023-05-20T22:00:00.000Z,
  deletedBy: null,
  deletedAt: null,
  img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
} 
24/05/23 20:05:59 :: ?? Le role trouvé est: { title: 'Administrateur' } 
24/05/23 20:05:59 :: !! Comparons le mots de passe reçu le résultat est : true 
24/05/23 20:05:59 :: ?? Tentative de mise à jour de la last_connection 
24/05/23 20:05:59 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:59 :: => Requete appelée: 
      UPDATE customer
      SET last_connection = NOW()
      WHERE Id_customer = ?;
       
24/05/23 20:05:59 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: 'Enregistrements correspondants: 1  Modifiés: 1  Warnings: 0',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 20:05:59 :: --> last_connection mis à jour avec succès. 
24/05/23 20:05:59 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:59 :: !! L'objet préparé pour le retour au Front est le suivant : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: 2023-05-24T18:05:26.000Z,
    createdBy: 'site',
    createdAt: 2023-04-26T22:00:00.000Z,
    modifiedBy: 'Secutorz',
    modifiedAt: 2023-05-20T22:00:00.000Z,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur'
} 
24/05/23 20:05:59 :: ?? Pour information, un accessToken a été créé pour 1h : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDU6MjYuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTU5LCJleHAiOjE2ODQ5NTUxNTl9.AytQUI2aUOKHHuqG33d4urqAIm-e7OicHatbJaAHjSU 
24/05/23 20:05:59 :: ?? Pour information, un refreshToken a été créé pour 10d : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDU6MjYuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTU5LCJleHAiOjE2ODU4MTU1NTl9.AkFVMh0VrK4aegromVNoHOyYv9sN7prwvz35PlPpYdg 
24/05/23 20:05:59 :: ==> Login avec succes ! Envoi du refreshToken en cookie, envoi des données + envoi du accessToken. 
24/05/23 20:05:59 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:05:59 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:05:59 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:05:59 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:05:59 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:05:59 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:06:05 :: ------------------------------------------------------- 
24/05/23 20:06:05 :: // Appel de la method handleLogout de loginController // 
24/05/23 20:06:05 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: '2023-05-24T18:05:26.000Z',
    createdBy: 'site',
    createdAt: '2023-04-26T22:00:00.000Z',
    modifiedBy: 'Secutorz',
    modifiedAt: '2023-05-20T22:00:00.000Z',
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur',
  iat: 1684951559,
  exp: 1685815559
} 
24/05/23 20:06:16 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:06:16 :: --> Test de la disponibilité du pseudo:  Secu 
24/05/23 20:06:16 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:06:16 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:06:16 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T18:05:59.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
    }
  ]
] 
24/05/23 20:06:16 :: !! Le pseudo Secu n'est pas disponible. 
24/05/23 20:06:16 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:06:27 :: ===================================================== 
24/05/23 20:06:27 :: // Appel de la method handleAuth de authController // 
24/05/23 20:06:27 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:06:27 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:06:27 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:06:27 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:06:27 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:06:27 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:06:27 :: ===================================================== 
24/05/23 20:06:27 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:06:27 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:06:27 :: // Appel de la method handleAuth de authController // 
24/05/23 20:06:27 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:06:27 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:06:27 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:06:27 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:06:28 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 20:06:28 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:06:28 :: // Appel de la method handleLogin de loginController // 
24/05/23 20:06:28 :: => Requete appelée:         
      SELECT account.email, account.password, customer.*, role.*
      FROM account
      JOIN customer ON account.Id_account = customer.Id_account
      JOIN role ON customer.Id_role = role.Id_role
      WHERE account.email = ?
       
24/05/23 20:06:28 :: ==>Retour de la requete: [
  [
    {
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T18:05:59.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg',
      title: 'Administrateur'
    }
  ]
] 
24/05/23 20:06:28 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:06:28 :: ?? L'account trouvé est: {
  email: 'maxoa59@gmail.com',
  password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi'
} 
24/05/23 20:06:28 :: ?? Le customer trouvé est: {
  Id_account: 6,
  Id_customer: 6,
  Id_role: 3,
  pseudo: 'Secu',
  firstname: 'Maxence',
  lastname: 'ALLART',
  last_connection: 2023-05-24T18:05:59.000Z,
  createdBy: 'site',
  createdAt: 2023-04-26T22:00:00.000Z,
  modifiedBy: 'Secutorz',
  modifiedAt: 2023-05-20T22:00:00.000Z,
  deletedBy: null,
  deletedAt: null,
  img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
} 
24/05/23 20:06:28 :: ?? Le role trouvé est: { title: 'Administrateur' } 
24/05/23 20:06:28 :: ?? Tentative de mise à jour de la last_connection 
24/05/23 20:06:28 :: !! Comparons le mots de passe reçu le résultat est : true 
24/05/23 20:06:28 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:06:28 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: 'Enregistrements correspondants: 1  Modifiés: 1  Warnings: 0',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 20:06:28 :: => Requete appelée: 
      UPDATE customer
      SET last_connection = NOW()
      WHERE Id_customer = ?;
       
24/05/23 20:06:28 :: --> last_connection mis à jour avec succès. 
24/05/23 20:06:28 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:06:28 :: ?? Pour information, un accessToken a été créé pour 1h : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDU6NTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTg4LCJleHAiOjE2ODQ5NTUxODh9.jNDhEznatos5ctw7IgWcX7EC5Of869inKkatmhIxhWY 
24/05/23 20:06:28 :: !! L'objet préparé pour le retour au Front est le suivant : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: 2023-05-24T18:05:59.000Z,
    createdBy: 'site',
    createdAt: 2023-04-26T22:00:00.000Z,
    modifiedBy: 'Secutorz',
    modifiedAt: 2023-05-20T22:00:00.000Z,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur'
} 
24/05/23 20:06:28 :: ?? Pour information, un refreshToken a été créé pour 10d : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDU6NTkuMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTUxNTg4LCJleHAiOjE2ODU4MTU1ODh9.NXTQ5ON0iHe1l2Yj8p-rVd1z_Ilf9ZGLXDq6x1Zt50w 
24/05/23 20:06:28 :: ==> Login avec succes ! Envoi du refreshToken en cookie, envoi des données + envoi du accessToken. 
24/05/23 20:06:28 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 20:06:28 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:06:28 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 20:06:28 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 20:06:28 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 20:06:28 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:06:32 :: ------------------------------------------------------- 
24/05/23 20:06:32 :: // Appel de la method handleLogout de loginController // 
24/05/23 20:06:32 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: '2023-05-24T18:05:59.000Z',
    createdBy: 'site',
    createdAt: '2023-04-26T22:00:00.000Z',
    modifiedBy: 'Secutorz',
    modifiedAt: '2023-05-20T22:00:00.000Z',
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur',
  iat: 1684951588,
  exp: 1685815588
} 
24/05/23 20:06:40 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:06:40 :: --> Test de la disponibilité du pseudo:  Secu 
24/05/23 20:06:40 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:06:40 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:06:40 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T18:06:28.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
    }
  ]
] 
24/05/23 20:06:40 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:06:40 :: !! Le pseudo Secu n'est pas disponible. 
24/05/23 20:07:04 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:07:04 :: --> Test de la disponibilité du pseudo:  Secut 
24/05/23 20:07:04 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:07:04 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:07:04 :: !! Le pseudo Secut est disponible. 
24/05/23 20:07:04 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:07:04 :: ==>Retour de la requete: [ [] ] 
24/05/23 20:07:04 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 20:07:04 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 20:07:04 :: => avec les données suivantes :  {
  firstname: 'aaaaaaa',
  lastname: 'bbbbbbb',
  pseudo: 'Secut',
  email: 'maxoa59@gmail.com',
  password: '123456',
  password2: '123456'
} 
24/05/23 20:07:04 :: // Tentative d'envoi de mail : // 
24/05/23 20:07:04 :: §§ MAIL :  Envoyé 
24/05/23 20:07:04 :: Verification email sent to maxoa59@gmail.com 
24/05/23 20:07:04 :: le retourMailer est = à: {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 77,
    messageTime: 353,
    messageSize: 2167,
    response: '250 2.0.0 OK  1684951624 z12-20020a5d640c000000b00307c8d6b4a0sm15160592wru.26 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<522d7cb7-a0bc-5701-2ed8-bd67a264ab72@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 20:08:29 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:08:29 :: --> Test de la disponibilité du pseudo:  Secute 
24/05/23 20:08:29 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:08:29 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:08:29 :: ==>Retour de la requete: [ [] ] 
24/05/23 20:08:29 :: !! Le pseudo Secute est disponible. 
24/05/23 20:08:29 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:08:29 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 20:08:29 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 20:08:29 :: => avec les données suivantes :  {
  firstname: 'aaaaaaa',
  lastname: 'bbbbbbb',
  pseudo: 'Secute',
  email: 'maxoa59@gmail.com',
  password: '123456',
  password2: '123456'
} 
24/05/23 20:08:29 :: // Tentative d'envoi de mail : // 
24/05/23 20:08:29 :: §§ MAIL :  Envoyé 
24/05/23 20:08:29 :: Verification email sent to maxoa59@gmail.com 
24/05/23 20:08:29 :: le retourMailer est = à: {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 68,
    messageTime: 288,
    messageSize: 2168,
    response: '250 2.0.0 OK  1684951709 d16-20020a5d5390000000b00301a351a8d6sm15260953wrv.84 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<1a701167-4191-ac83-359e-18e544da6e10@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 20:10:11 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:11:16 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:11:32 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:11:58 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:12:10 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:12:14 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:12:22 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:13:54 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:14:12 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:14:35 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:14:43 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:14:44 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:14:46 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:14:50 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:15:08 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:15:13 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:15:40 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:15:40 :: --> Test de la disponibilité du pseudo:  Secuto 
24/05/23 20:15:40 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:15:40 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:15:40 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:15:40 :: ==>Retour de la requete: [ [] ] 
24/05/23 20:15:40 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:15:40 :: !! Le pseudo Secuto est disponible. 
24/05/23 20:15:40 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 20:15:40 :: => avec les données suivantes :  {
  firstname: 'aaaaaa',
  lastname: 'bbbbbbb',
  pseudo: 'Secuto',
  email: 'maxoa59@gmail.com',
  password: '123456',
  password2: '123456'
} 
24/05/23 20:15:40 :: // Tentative d'envoi de mail : // 
24/05/23 20:15:40 :: §§ MAIL :  Envoyé 
24/05/23 20:15:40 :: le retourMailer est = à: {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 75,
    messageTime: 427,
    messageSize: 2167,
    response: '250 2.0.0 OK  1684952140 o14-20020a5d58ce000000b003062675d4c9sm15063954wrf.39 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<597ff635-a0a0-3009-ef3d-3de81172a376@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 20:15:40 :: Verification email sent to maxoa59@gmail.com 
24/05/23 20:17:00 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:17:30 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:17:31 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:17:38 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:17:43 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:18:00 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:18:02 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:18:07 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:18:10 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:18:34 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:18:36 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:19:51 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:19:55 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:19:58 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:19:59 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:02 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:13 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:24 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:30 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:36 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:39 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:44 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:56 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:57 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:20:59 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:21:02 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:21:06 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:22:04 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:22:18 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:22:21 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:22:35 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:24:53 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:38:36 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:38:36 :: --> Test de la disponibilité du pseudo:  Secuto 
24/05/23 20:38:36 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:38:36 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:38:36 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:38:36 :: ==>Retour de la requete: [ [] ] 
24/05/23 20:38:36 :: !! Le pseudo Secuto est disponible. 
24/05/23 20:38:36 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:38:36 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 20:38:36 :: => avec les données suivantes :  {
  firstname: 'aaaaaa',
  lastname: 'bbbbbbb',
  pseudo: 'Secuto',
  email: 'maxoa59@gmail.com',
  password: '123456',
  password2: '123456'
} 
24/05/23 20:38:36 :: // Tentative d'envoi de mail : // 
24/05/23 20:38:37 :: ?? le retourMailer est = à: {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 96,
    messageTime: 482,
    messageSize: 2246,
    response: '250 2.0.0 OK  1684953517 y8-20020a7bcd88000000b003f6038faa19sm3102527wmj.19 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<a53fdee3-c096-179b-de24-f049db504656@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 20:38:37 :: §§ MAIL :  Envoyé 
24/05/23 20:38:56 :: ===================================================== 
24/05/23 20:38:56 :: // Appel de la method handleAuth de authController // 
24/05/23 20:38:56 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:38:56 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:38:56 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:38:56 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:38:56 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:38:56 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:41:13 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:41:13 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:41:13 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:41:13 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:41:13 :: XX Erreur lors de la requête pour ajouter utilisateur: TypeError: Cannot read properties of undefined (reading 'insertId') 
24/05/23 20:41:24 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:41:24 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:41:24 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:41:24 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:41:24 :: XX Erreur lors de la requête pour ajouter utilisateur: TypeError: Cannot read properties of undefined (reading 'insertId') 
24/05/23 20:41:43 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:42:18 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:42:19 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:42:19 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:42:19 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:42:19 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:42:19 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:42:19 :: Oops une erreur lors de la tentative de Query: TypeError: Bind parameters must not contain undefined. To pass SQL NULL specify JS null
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:661:17
    at Array.forEach (<anonymous>)
    at Connection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:653:22)
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:120:11
    at new Promise (<anonymous>)
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:117:12)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:122:7)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 
24/05/23 20:42:19 :: !! Ajout du customer avec succès ! 
24/05/23 20:42:19 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:42:19 :: !! Ajout de l'account avec succès ! 
24/05/23 20:42:50 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:43:04 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:43:10 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:43:10 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:43:10 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:43:10 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:43:10 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:43:10 :: Oops une erreur lors de la tentative de Query: TypeError: Bind parameters must not contain undefined. To pass SQL NULL specify JS null
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:661:17
    at Array.forEach (<anonymous>)
    at Connection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:653:22)
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:120:11
    at new Promise (<anonymous>)
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:117:12)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:122:24)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 
24/05/23 20:43:10 :: !! Ajout de l'account avec succès ! 
24/05/23 20:43:10 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:43:10 :: response est yo : undefined 
24/05/23 20:43:10 :: !! Ajout du customer avec succès ! 
24/05/23 20:44:26 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:44:28 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:44:50 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:44:51 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:44:57 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:03 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:08 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:10 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:16 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:17 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:19 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:26 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:32 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:46 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:45:48 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:46:28 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:46:32 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:46:37 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:47:08 :: ===================================================== 
24/05/23 20:47:08 :: // Appel de la method handleAuth de authController // 
24/05/23 20:47:08 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:47:08 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:47:09 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:47:09 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:47:09 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:47:09 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:47:09 :: ===================================================== 
24/05/23 20:47:09 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:47:09 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:47:09 :: // Appel de la method handleAuth de authController // 
24/05/23 20:47:09 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:47:09 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:47:09 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:47:09 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:47:10 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:47:10 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:47:10 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:47:10 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:47:10 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:118:24)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:47:10 :: !! Ajout de l'account avec succès ! 
24/05/23 20:47:10 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:47:10 :: Oops une erreur lors de la tentative de Query: TypeError: Bind parameters must not contain undefined. To pass SQL NULL specify JS null
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:661:17
    at Array.forEach (<anonymous>)
    at Connection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:653:22)
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:120:11
    at new Promise (<anonymous>)
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:117:12)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:128:26)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 
24/05/23 20:47:10 :: response est yo : undefined 
24/05/23 20:47:10 :: !! Ajout du customer avec succès ! 
24/05/23 20:47:56 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:48:00 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:48:17 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:48:24 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:48:26 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:48:29 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:48:34 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:48:59 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:49:04 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:49:06 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:49:18 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:49:18 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:49:18 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:49:18 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:49:18 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:118:24)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:49:18 :: Oops une erreur lors de la tentative de Query: TypeError: Bind parameters must not contain undefined. To pass SQL NULL specify JS null
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:661:17
    at Array.forEach (<anonymous>)
    at Connection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:653:22)
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:120:11
    at new Promise (<anonymous>)
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:117:12)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:128:26)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 
24/05/23 20:49:18 :: response est yo : undefined 
24/05/23 20:49:18 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:49:18 :: !! Ajout du customer avec succès ! 
24/05/23 20:49:18 :: !! Ajout de l'account avec succès ! 
24/05/23 20:50:04 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:50:09 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:50:17 :: // Appel de la method handleAuth de authController // 
24/05/23 20:50:17 :: ===================================================== 
24/05/23 20:50:17 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:50:17 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:50:17 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:50:17 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:50:17 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:50:17 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:50:20 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:50:20 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:50:20 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:50:20 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:50:20 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:118:24)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:50:20 :: !! Ajout de l'account avec succès ! 
24/05/23 20:50:20 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:50:20 :: Oops une erreur lors de la tentative de Query: TypeError: Bind parameters must not contain undefined. To pass SQL NULL specify JS null
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:661:17
    at Array.forEach (<anonymous>)
    at Connection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:653:22)
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:120:11
    at new Promise (<anonymous>)
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:117:12)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:128:26)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 
24/05/23 20:50:20 :: response est yo : undefined 
24/05/23 20:50:20 :: !! Ajout du customer avec succès ! 
24/05/23 20:50:37 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:50:39 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:50:40 :: ===================================================== 
24/05/23 20:50:40 :: // Appel de la method handleAuth de authController // 
24/05/23 20:50:40 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:50:40 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:50:40 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:50:40 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:50:40 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:50:40 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:50:41 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:50:41 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:50:41 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:50:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:50:41 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:118:24)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:50:41 :: !! Ajout de l'account avec succès ! 
24/05/23 20:50:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:50:41 :: Oops une erreur lors de la tentative de Query: TypeError: Bind parameters must not contain undefined. To pass SQL NULL specify JS null
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:661:17
    at Array.forEach (<anonymous>)
    at Connection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:653:22)
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:120:11
    at new Promise (<anonymous>)
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:117:12)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:128:26)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 
24/05/23 20:50:41 :: response est yo : undefined 
24/05/23 20:50:41 :: !! Ajout du customer avec succès ! 
24/05/23 20:51:53 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:52:02 :: ===================================================== 
24/05/23 20:52:02 :: // Appel de la method handleAuth de authController // 
24/05/23 20:52:02 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:52:02 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:52:02 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:52:02 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:52:02 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:52:02 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:52:03 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:52:03 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:52:03 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:52:03 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:52:03 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:118:24)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:52:03 :: Oops une erreur lors de la tentative de Query: TypeError: Bind parameters must not contain undefined. To pass SQL NULL specify JS null
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:661:17
    at Array.forEach (<anonymous>)
    at Connection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:653:22)
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:120:11
    at new Promise (<anonymous>)
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:117:12)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:128:26)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 
24/05/23 20:52:03 :: !! Ajout de l'account avec succès ! 
24/05/23 20:52:03 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:52:03 :: response est yo : undefined 
24/05/23 20:52:03 :: !! Ajout du customer avec succès ! 
24/05/23 20:52:45 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:52:50 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:52:53 :: ===================================================== 
24/05/23 20:52:53 :: // Appel de la method handleAuth de authController // 
24/05/23 20:52:53 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:52:53 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:52:53 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:52:53 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:52:53 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:52:53 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:52:54 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:52:54 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:52:54 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:52:54 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:52:54 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:52:54 :: Oops une erreur lors de la tentative de Query: TypeError: Bind parameters must not contain undefined. To pass SQL NULL specify JS null
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:661:17
    at Array.forEach (<anonymous>)
    at Connection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\lib\connection.js:653:22)
    at C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:120:11
    at new Promise (<anonymous>)
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:117:12)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:127:24)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 
24/05/23 20:52:54 :: !! Ajout de l'account avec succès ! 
24/05/23 20:52:54 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:52:54 :: response est yo : undefined 
24/05/23 20:52:54 :: !! Ajout du customer avec succès ! 
24/05/23 20:54:18 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:54:23 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:54:34 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:54:45 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:54:48 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:54:51 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:54:59 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:55:02 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:55:08 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:55:11 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:55:31 :: ===================================================== 
24/05/23 20:55:31 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:55:31 :: // Appel de la method handleAuth de authController // 
24/05/23 20:55:31 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:55:32 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:55:32 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:55:32 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:55:32 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:55:33 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:55:33 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:55:33 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:55:33 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:55:33 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:55:33 :: XX Ajout de l'account avec refus ! 
24/05/23 20:55:54 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:55:56 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:56:05 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:56:11 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:56:23 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:56:29 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 20:56:46 :: ===================================================== 
24/05/23 20:56:46 :: // Appel de la method handleAuth de authController // 
24/05/23 20:56:46 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:56:46 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:56:46 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:56:46 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:56:46 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:56:46 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:56:47 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:56:47 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:56:47 :: Nouvelle connection sur la database: pccompare 
24/05/23 20:56:47 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:56:47 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:56:47 :: XX Refus d'ajout de l'account ! 
24/05/23 20:56:53 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:56:53 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:56:53 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 20:56:53 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 20:56:53 :: XX Refus d'ajout de l'account ! 
24/05/23 20:57:40 :: // Appel de la function verifyPseudoAvailable de registerController // 
24/05/23 20:57:40 :: --> Test de la disponibilité du pseudo:  Bobby 
24/05/23 20:57:40 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:57:40 :: => Requete appelée: SELECT * FROM customer WHERE pseudo = ? 
24/05/23 20:57:40 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:57:40 :: !! Le pseudo Bobby est disponible. 
24/05/23 20:57:40 :: ==>Retour de la requete: [ [] ] 
24/05/23 20:57:40 :: // Appel de la method sendVerifMail de registerController // 
24/05/23 20:57:40 :: => avec les données suivantes :  {
  firstname: 'aaaaaaaaaa',
  lastname: 'bbbbbbbbbb',
  pseudo: 'Bobby',
  email: 'maxence.allart@gmail.com',
  password: '1234',
  password2: '1234'
} 
24/05/23 20:57:40 :: // Tentative d'envoi de mail : // 
24/05/23 20:57:41 :: §§ MAIL :  Envoyé 
24/05/23 20:57:41 :: ?? le retourMailer est = à: {
  data: {
    accepted: [ 'maxence.allart@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 68,
    messageTime: 313,
    messageSize: 2273,
    response: '250 2.0.0 OK  1684954661 e5-20020a5d4e85000000b003047dc162f7sm15255456wru.67 - gsmtp',
    envelope: { from: '', to: [ 'maxence.allart@gmail.com' ] },
    messageId: '<e51e654d-acfd-05a8-a7dd-a7f254968517@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 20:58:01 :: ===================================================== 
24/05/23 20:58:01 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 20:58:01 :: XX Pas de cookie accessToken reçu. 
24/05/23 20:58:01 :: // Appel de la method handleAuth de authController // 
24/05/23 20:58:01 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 20:58:01 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 20:58:01 :: XX Pas de cookie refreshToken reçu. 
24/05/23 20:58:01 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 20:58:23 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heGVuY2UuYWxsYXJ0QGdtYWlsLmNvbSIsImhhc2hlZFBhc3N3b3JkIjoicXUwalFDekI4aGgvVThpRklSbHN3T3JqempFbzZtTS41ODRqNHUvTXJKSzFLUUwxeHZLVmkiLCJwc2V1ZG8iOiJCb2JieSIsImZpcnN0bmFtZSI6ImFhYWFhYWFhYWEiLCJsYXN0bmFtZSI6ImJiYmJiYmJiYmIiLCJpYXQiOjE2ODQ5NTQ2NjAsImV4cCI6MTY4NDk1ODI2MH0.og2MyqPYllX9DdspNQTwQfQMrzedFi6lHa0YJHFvMsM 
24/05/23 20:58:23 :: // Appel de la method verifySentMail de registerController // 
24/05/23 20:58:23 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:58:23 :: => Requete appelée: INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?) 
24/05/23 20:58:23 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 16,
    info: '',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 20:58:23 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:58:23 :: !! Ajout de l'account avec succès ! 
24/05/23 20:58:23 :: // Appel de la method QUERY de database.service. // 
24/05/23 20:58:23 :: => Requete appelée: INSERT INTO customer (pseudo, firstname, lastname, Id_role, Id_account, createdBy) VALUES (?, ?, ?, ?, ? , ? ) 
24/05/23 20:58:23 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 14,
    info: '',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 20:58:23 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 20:58:23 :: !! Ajout du customer avec succès ! 
24/05/23 21:03:01 :: ===================================================== 
24/05/23 21:03:01 :: // Appel de la method handleAuth de authController // 
24/05/23 21:03:01 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 21:03:01 :: XX Pas de cookie accessToken reçu. 
24/05/23 21:03:01 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 21:03:01 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 21:03:01 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 21:03:01 :: XX Pas de cookie refreshToken reçu. 
24/05/23 21:03:02 :: // Appel de la method verifySentMail de registerController // 
24/05/23 21:03:02 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heGVuY2UuYWxsYXJ0QGdtYWlsLmNvbSIsImhhc2hlZFBhc3N3b3JkIjoicXUwalFDekI4aGgvVThpRklSbHN3T3JqempFbzZtTS41ODRqNHUvTXJKSzFLUUwxeHZLVmkiLCJwc2V1ZG8iOiJCb2JieSIsImZpcnN0bmFtZSI6ImFhYWFhYWFhYWEiLCJsYXN0bmFtZSI6ImJiYmJiYmJiYmIiLCJpYXQiOjE2ODQ5NTQ2NjAsImV4cCI6MTY4NDk1ODI2MH0.og2MyqPYllX9DdspNQTwQfQMrzedFi6lHa0YJHFvMsM 
24/05/23 21:03:02 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:02 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxence.allart@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxence.allart@gmail.com' pour la clef 'account.email'"
} 
24/05/23 21:03:02 :: XX Refus d'ajout de l'account ! 
24/05/23 21:03:27 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 21:03:27 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:27 :: // Appel de la method handleLogin de loginController // 
24/05/23 21:03:27 :: => Requete appelée:         
      SELECT account.email, account.password, customer.*, role.*
      FROM account
      JOIN customer ON account.Id_account = customer.Id_account
      JOIN role ON customer.Id_role = role.Id_role
      WHERE account.email = ?
       
24/05/23 21:03:27 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: null,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: null,
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:03:27 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:27 :: ?? L'account trouvé est: {
  email: 'maxence.allart@gmail.com',
  password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi'
} 
24/05/23 21:03:27 :: ?? Le customer trouvé est: {
  Id_account: 16,
  Id_customer: 14,
  Id_role: 1,
  pseudo: 'Bobby',
  firstname: 'aaaaaaaaaa',
  lastname: 'bbbbbbbbbb',
  last_connection: null,
  createdBy: 'site',
  createdAt: null,
  modifiedBy: null,
  modifiedAt: null,
  deletedBy: null,
  deletedAt: null,
  img_src: null
} 
24/05/23 21:03:27 :: ?? Le role trouvé est: { title: 'Utilisateur' } 
24/05/23 21:03:27 :: !! Comparons le mots de passe reçu le résultat est : true 
24/05/23 21:03:27 :: ?? Tentative de mise à jour de la last_connection 
24/05/23 21:03:27 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:27 :: => Requete appelée: 
      UPDATE customer
      SET last_connection = NOW()
      WHERE Id_customer = ?;
       
24/05/23 21:03:27 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: 'Enregistrements correspondants: 1  Modifiés: 1  Warnings: 0',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 21:03:27 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:27 :: --> last_connection mis à jour avec succès. 
24/05/23 21:03:27 :: !! L'objet préparé pour le retour au Front est le suivant : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur'
} 
24/05/23 21:03:27 :: ?? Pour information, un accessToken a été créé pour 1h : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg0OTU4NjA3fQ.vqe58bvI3AtPwQBq13RoV9nb4QNSyFhahlJCftA0eHo 
24/05/23 21:03:27 :: ?? Pour information, un refreshToken a été créé pour 10d : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg1ODE5MDA3fQ.J2Fy0kCSZO6pwXYLVXP4vWuw4Hh5hD7ivDU5BnL3uUI 
24/05/23 21:03:27 :: ==> Login avec succes ! Envoi du refreshToken en cookie, envoi des données + envoi du accessToken. 
24/05/23 21:03:32 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:03:32 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg1ODE5MDA3fQ.J2Fy0kCSZO6pwXYLVXP4vWuw4Hh5hD7ivDU5BnL3uUI 
24/05/23 21:03:32 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:03:32 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:32 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur',
  iat: 1684955007,
  exp: 1685819007
} 
24/05/23 21:03:32 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: null,
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:03:32 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:03:32 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:03:27.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":null},"role":"Utilisateur"} 
24/05/23 21:03:32 :: // Appel de la method selectOneCustomer // 
24/05/23 21:03:32 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:32 :: ?? Nous tetons de chercher les infos de l'utilisateur avec l'id: 14 
24/05/23 21:03:32 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:32 :: => Requete appelée: SELECT customer.*, role.*, account.email
  FROM customer
  INNER JOIN role ON customer.Id_role = role.Id_role
  INNER JOIN account ON customer.Id_account = account.Id_account
  WHERE customer.Id_customer = ? AND customer.deletedBy IS NULL;
   
24/05/23 21:03:32 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: null,
      title: 'Utilisateur',
      email: 'maxence.allart@gmail.com'
    }
  ]
] 
24/05/23 21:03:32 :: ?? Nous avons trouvé l'utilisateur avec l'id 14: ses infos : {
  account: { email: 'maxence.allart@gmail.com' },
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: 2023-05-24T19:03:27.000Z,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: { title: 'Utilisateur' }
} 
24/05/23 21:03:32 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:33 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:33 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:33 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:33 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:33 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:33 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:33 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:33 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:33 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:33 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:33 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:33 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:36 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:03:36 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:03:36 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg1ODE5MDA3fQ.J2Fy0kCSZO6pwXYLVXP4vWuw4Hh5hD7ivDU5BnL3uUI 
24/05/23 21:03:36 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:36 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur',
  iat: 1684955007,
  exp: 1685819007
} 
24/05/23 21:03:36 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:03:36 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: null,
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:03:36 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:36 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:03:27.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":null},"role":"Utilisateur"} 
24/05/23 21:03:36 :: // Appel de la method getAllFavoriteByIdCustomer de favoriteController// 
24/05/23 21:03:36 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:36 :: => Requete appelée: 
      SELECT ca.*, a.*, c.*
      FROM customer_article ca
      JOIN article a ON ca.Id_article = a.Id_article
      JOIN model m ON a.Id_model = m.Id_model
      JOIN category c ON m.Id_category = c.Id_category
      WHERE ca.Id_customer = ?;
          
       
24/05/23 21:03:36 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:36 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:36 :: ---> Sortie de la method getAllFavoriteByIdCustomer de favoriteController // 
24/05/23 21:03:37 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:03:37 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:03:37 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg1ODE5MDA3fQ.J2Fy0kCSZO6pwXYLVXP4vWuw4Hh5hD7ivDU5BnL3uUI 
24/05/23 21:03:37 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur',
  iat: 1684955007,
  exp: 1685819007
} 
24/05/23 21:03:37 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:37 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:03:37 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: null,
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:03:37 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:37 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:03:27.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":null},"role":"Utilisateur"} 
24/05/23 21:03:37 :: // Appel de la méthode getAllCommentsByIdCustomer de commentsController // 
24/05/23 21:03:37 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:37 :: => Requete appelée: 
        SELECT c.*, a.*, cat.*
        FROM comment c
        JOIN article a ON c.Id_article = a.Id_article
        JOIN model m ON a.Id_model = m.Id_model
        JOIN category cat ON m.Id_category = cat.Id_category
        WHERE c.Id_customer = ?
         
24/05/23 21:03:37 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:37 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:37 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:37 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:37 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:37 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:37 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:37 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:37 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:37 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:37 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:37 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:37 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:37 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:39 :: // Appel de la method selectAll de dropdownmenuController// 
24/05/23 21:03:39 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:39 :: => Requete appelée: SELECT * FROM category 
24/05/23 21:03:39 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:39 :: ==>Retour de la requete: [
  [
    {
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique'
    },
    {
      Id_category: 2,
      category_name: 'Processeurs',
      code: 'cpu',
      img_src_category: null,
      img_alt_category: 'Processeurs'
    },
    {
      Id_category: 3,
      category_name: 'Cartes mères',
      code: 'mb',
      img_src_category: null,
      img_alt_category: 'Cartes mères'
    },
    {
      Id_category: 4,
      category_name: 'Mémoires Ram',
      code: 'ram',
      img_src_category: null,
      img_alt_category: 'Mémoires Ram'
    }
  ]
] 
24/05/23 21:03:39 :: ---> Sortie de la method selectAll de carouselController // 
24/05/23 21:03:39 :: // Appel de la method selectAllgpu de compareController// 
24/05/23 21:03:39 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:39 :: => Requete appelée: 
SELECT 
  a.*, m.*, c.*, g.*, h.price AS latest_price,
  (SELECT COUNT(*) FROM comment WHERE Id_article = a.Id_article) AS nb_note,
  (SELECT COUNT(*) FROM comment WHERE Id_article = a.Id_article AND note = 1) AS nb_note_1,
  (SELECT COUNT(*) FROM comment WHERE Id_article = a.Id_article AND note = 2) AS nb_note_2,
  (SELECT COUNT(*) FROM comment WHERE Id_article = a.Id_article AND note = 3) AS nb_note_3,
  (SELECT COUNT(*) FROM comment WHERE Id_article = a.Id_article AND note = 4) AS nb_note_4,
  (SELECT COUNT(*) FROM comment WHERE Id_article = a.Id_article AND note = 5) AS nb_note_5
FROM article a
JOIN model m ON a.Id_model = m.Id_model
JOIN category c ON m.Id_category = c.Id_category
LEFT JOIN gpu g ON a.Id_article = g.Id_article
LEFT JOIN (
  SELECT s.Id_article, MAX(s.Id_historique_prix) AS max_historique_prix
  FROM seller_historique_article s
  GROUP BY s.Id_article
) latest_seller_historique_article ON a.Id_article = latest_seller_historique_article.Id_article
LEFT JOIN historique_prix h ON latest_seller_historique_article.max_historique_prix = h.Id_historique_prix
WHERE c.code = "gpu";
 
24/05/23 21:03:39 :: ==>Retour de la requete: [
  [
    {
      Id_article: 2,
      product_number: 'GV-N4090GAMING OC-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9743-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 2,
      ean: null,
      upc: '889523033845',
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2535,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 340,
      width: 150,
      height: 75,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 446,
      texture_rate: 1298,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 3,
      nb_note_1: 1,
      nb_note_2: 2,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 4,
      product_number: 'TUF-RTX4090-24G-GAMING',
      designation: 'ASUS TUF RTX 4090 GAMING',
      marque: 'ASUS',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9746-front.jpg',
      img_alt: 'ASUS TUF RTX 4090 GAMING',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 4,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 348,
      width: 160,
      height: 73,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 7,
      product_number: 'ZT-D40900D-10P',
      designation: 'ZOTAC RTX 4090 Trinity',
      marque: 'ZOTAC',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9771-front.jpg',
      img_alt: 'ZOTAC RTX 4090 Trinity',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 7,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 356,
      width: 165,
      height: 71,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 1,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 1
    },
    {
      Id_article: 11,
      product_number: 'TUF-RTX4090-O24G-GAMING',
      designation: 'ASUS TUF RTX 4090 GAMING OC',
      marque: 'ASUS',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9745-front.jpg',
      img_alt: 'ASUS TUF RTX 4090 GAMING OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 11,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2565,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 348,
      width: 160,
      height: 73,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 451,
      texture_rate: 1313,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 12,
      product_number: 'C4090-246XX-18330005',
      designation: 'Inno3D iChill RTX 4090 BLACK',
      marque: 'Inno3D',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9773-front.jpg',
      img_alt: 'Inno3D iChill RTX 4090 BLACK',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 12,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 280,
      width: 137,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 17,
      product_number: null,
      designation: 'HP RTX 4090 OEM',
      marque: 'HP',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10715-front.jpg',
      img_alt: 'HP RTX 4090 OEM',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 17,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 26,
      product_number: null,
      designation: 'Leadtek WinFast RTX 4090 HURRICANE',
      marque: 'Leadtek',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9869-front.jpg',
      img_alt: 'Leadtek WinFast RTX 4090 HURRICANE',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 26,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 352,
      width: 145,
      height: 68,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 27,
      product_number: null,
      designation: 'MSI RTX 4090 VENTUS 3X',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9907-front.jpg',
      img_alt: 'MSI RTX 4090 VENTUS 3X',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 27,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 322,
      width: 136,
      height: 63,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 28,
      product_number: null,
      designation: 'Yeston RTX 4090 Deluxe HA',
      marque: 'Yeston',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9834-front.jpg',
      img_alt: 'Yeston RTX 4090 Deluxe HA',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 28,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 330,
      width: 132,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 29,
      product_number: 'VCG409024TFXXPB1',
      designation: 'PNY XLR8 RTX 4090 VERTO EPIC-X Triple Fan',
      marque: 'PNY',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9777-front.jpg',
      img_alt: 'PNY XLR8 RTX 4090 VERTO EPIC-X Triple Fan',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 29,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 332,
      width: 137,
      height: 71,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 30,
      product_number: '49NXM5MD6DDR',
      designation: 'GALAX RTX 4090 ST (1-Click OC)',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9835-front.jpg',
      img_alt: 'GALAX RTX 4090 ST (1-Click OC)',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 30,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 138,
      height: 74,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 33,
      product_number: null,
      designation: 'ZOTAC RTX 4090 Apocalypse OC',
      marque: 'ZOTAC',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9786-front.jpg',
      img_alt: 'ZOTAC RTX 4090 Apocalypse OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 33,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2550,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 367,
      width: 150,
      height: 74,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 449,
      texture_rate: 1305,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 1,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 1,
      nb_note_5: 0
    },
    {
      Id_article: 36,
      product_number: null,
      designation: 'MSI RTX 4090 SUPRIM X',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9753-front.jpg',
      img_alt: 'MSI RTX 4090 SUPRIM X',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 36,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2625,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 142,
      height: 78,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 462,
      texture_rate: 1344,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 37,
      product_number: '49NXM5MD6DSK',
      designation: 'KFA2 RTX 4090 ST (1-Click OC)',
      marque: 'KFA2',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9838-front.jpg',
      img_alt: 'KFA2 RTX 4090 ST (1-Click OC)',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 37,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 138,
      height: 74,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 38,
      product_number: null,
      designation: 'GALAX RTX 4090 ST V2 (1-Click OC)',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9836-front.jpg',
      img_alt: 'GALAX RTX 4090 ST V2 (1-Click OC)',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 38,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 138,
      height: 74,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 39,
      product_number: null,
      designation: 'GALAX RTX 4090 HOF OC LAB PLUS',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9840-front.jpg',
      img_alt: 'GALAX RTX 4090 HOF OC LAB PLUS',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 39,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2625,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 344,
      width: 144,
      height: 77,
      tdp: 550,
      psu_needed: 950,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '2 x 16 Pin ',
      pixel_rate: 462,
      texture_rate: 1344,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 40,
      product_number: '471056224-3413',
      designation: 'Gainward RTX 4090 Glare OC',
      marque: 'Gainward',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10120-front.jpg',
      img_alt: 'Gainward RTX 4090 Glare OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 40,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 41,
      product_number: '471056224-3390',
      designation: 'Gainward RTX 4090 Glare',
      marque: 'Gainward',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10378-front.jpg',
      img_alt: 'Gainward RTX 4090 Glare',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 41,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 44,
      product_number: null,
      designation: 'Colorful Tomahawk RTX 4090 Deluxe Edition',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9740-front.jpg',
      img_alt: 'Colorful Tomahawk RTX 4090 Deluxe Edition',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 44,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2565,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 451,
      texture_rate: 1313,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 46,
      product_number: 'M-NRTX4090G/6RHHPPP-M3530',
      designation: 'Manli RTX 4090 Gallardo (M3530+N675)',
      marque: 'Manli',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9877-front.jpg',
      img_alt: 'Manli RTX 4090 Gallardo (M3530+N675)',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 46,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 351,
      width: 145,
      height: 63,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 48,
      product_number: null,
      designation: 'GALAX RTX 4090 Metal Master',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9874-front.jpg',
      img_alt: 'GALAX RTX 4090 Metal Master',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 48,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 338,
      width: 139,
      height: 69,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 49,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Neptune',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10473-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Neptune',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 49,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 254,
      width: 152,
      height: 42,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 51,
      product_number: null,
      designation: 'GALAX RTX 4090 Boomstar',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9872-front.jpg',
      img_alt: 'GALAX RTX 4090 Boomstar',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 51,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 338,
      width: 139,
      height: 69,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 54,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Vulcan OC',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9787-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Vulcan OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 54,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2625,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 349,
      width: 160,
      height: 70,
      tdp: 515,
      psu_needed: 900,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 462,
      texture_rate: 1344,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 59,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Neptune OC',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9788-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Neptune OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 59,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2640,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 254,
      width: 152,
      height: 42,
      tdp: 550,
      psu_needed: 950,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 465,
      texture_rate: 1351,
      fp32: 87,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 1,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 1
    },
    {
      Id_article: 65,
      product_number: 'GV-N4090GAMING-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9857-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 65,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 340,
      width: 150,
      height: 75,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 66,
      product_number: 'ZT-D40900B-10P',
      designation: 'ZOTAC RTX 4090 AMP Extreme AIRO',
      marque: 'ZOTAC',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9769-front.jpg',
      img_alt: 'ZOTAC RTX 4090 AMP Extreme AIRO',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 66,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 356,
      width: 166,
      height: 72,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 67,
      product_number: null,
      designation: 'Dell RTX 4090 OEM',
      marque: 'Dell',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10191-front.jpg',
      img_alt: 'Dell RTX 4090 OEM',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 67,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 68,
      product_number: '49NXM5MD6DSG',
      designation: 'GALAX RTX 4090 SG (1-Click OC)',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9780-front.jpg',
      img_alt: 'GALAX RTX 4090 SG (1-Click OC)',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 68,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 138,
      height: 74,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 70,
      product_number: 'N40903-246XX-18332989',
      designation: 'Inno3D RTX 4090 X3',
      marque: 'Inno3D',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9800-front.jpg',
      img_alt: 'Inno3D RTX 4090 X3',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 70,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2550,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 336,
      width: 145,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 449,
      texture_rate: 1305,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 71,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Chinese New Year Gift Box 2023 Advanced',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10464-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Chinese New Year Gift Box 2023 Advanced',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 71,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2610,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 344,
      width: 148,
      height: 71,
      tdp: 490,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 459,
      texture_rate: 1336,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 72,
      product_number: null,
      designation: 'EVGA RTX 4090 FTW3 Prototype',
      marque: 'EVGA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9870-front.jpg',
      img_alt: 'EVGA RTX 4090 FTW3 Prototype',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 72,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 73,
      product_number: null,
      designation: 'NVIDIA GeForce RTX 4090 Founders Edition',
      marque: 'NVIDIA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9915-front.jpg',
      img_alt: 'NVIDIA GeForce RTX 4090 Founders Edition',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 73,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: 137,
      height: 61,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 74,
      product_number: null,
      designation: 'GALAX RTX 4090 Metal Master OC',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9873-front.jpg',
      img_alt: 'GALAX RTX 4090 Metal Master OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 74,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2565,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 338,
      width: 139,
      height: 69,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 451,
      texture_rate: 1313,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 75,
      product_number: null,
      designation: 'Gainward RTX 4090 Phantom',
      marque: 'Gainward',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9768-front.jpg',
      img_alt: 'Gainward RTX 4090 Phantom',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 75,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 329,
      width: 152,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 76,
      product_number: 'GV-N4090AORUS M-24GD',
      designation: 'GIGABYTE AORUS RTX 4090 MASTER',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9742-front.jpg',
      img_alt: 'GIGABYTE AORUS RTX 4090 MASTER',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 76,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2550,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 359,
      width: 163,
      height: 75,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 449,
      texture_rate: 1305,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 78,
      product_number: null,
      designation: 'Gainward RTX 4090 Phantom GS',
      marque: 'Gainward',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9767-front.jpg',
      img_alt: 'Gainward RTX 4090 Phantom GS',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 78,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2610,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 329,
      width: 142,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 459,
      texture_rate: 1336,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 80,
      product_number: 'ROG-STRIX-RTX4090-24G-WHITE',
      designation: 'ASUS ROG STRIX RTX 4090 GAMING WHITE',
      marque: 'ASUS',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9986-front.jpg',
      img_alt: 'ASUS ROG STRIX RTX 4090 GAMING WHITE',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 80,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'White',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 358,
      width: 149,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 81,
      product_number: '49NXM5MD6DSK',
      designation: 'KFA2 RTX 4090 SG (1-Click OC)',
      marque: 'KFA2',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9783-front.jpg',
      img_alt: 'KFA2 RTX 4090 SG (1-Click OC)',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 81,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 138,
      height: 74,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 82,
      product_number: null,
      designation: 'MSI RTX 4090 SUPRIM LIQUID X',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9757-front.jpg',
      img_alt: 'MSI RTX 4090 SUPRIM LIQUID X',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 82,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2625,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 280,
      width: 140,
      height: 43,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 462,
      texture_rate: 1344,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 83,
      product_number: null,
      designation: 'MSI RTX 4090 GAMING TRIO',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9756-front.jpg',
      img_alt: 'MSI RTX 4090 GAMING TRIO',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 83,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 337,
      width: 140,
      height: 77,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 84,
      product_number: 'C40903-246XX-1833VA47',
      designation: 'Inno3D iChill RTX 4090 X3',
      marque: 'Inno3D',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9972-front.jpg',
      img_alt: 'Inno3D iChill RTX 4090 X3',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 84,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 334,
      width: 148,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 85,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Vulcan',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9741-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Vulcan',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 85,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 349,
      width: 160,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 86,
      product_number: null,
      designation: 'MSI RTX 4090 GAMING X TRIO',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9755-front.jpg',
      img_alt: 'MSI RTX 4090 GAMING X TRIO',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 86,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2595,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 337,
      width: 140,
      height: 77,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 457,
      texture_rate: 1328,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 88,
      product_number: null,
      designation: 'KFA2 RTX 4090 ST V2 (1-Click OC)',
      marque: 'KFA2',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9839-front.jpg',
      img_alt: 'KFA2 RTX 4090 ST V2 (1-Click OC)',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 88,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 138,
      height: 74,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 89,
      product_number: 'ROG-STRIX-RTX4090-24G-GAMING',
      designation: 'ASUS ROG STRIX RTX 4090 GAMING',
      marque: 'ASUS',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9750-front.jpg',
      img_alt: 'ASUS ROG STRIX RTX 4090 GAMING',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 89,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 358,
      width: 149,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 92,
      product_number: 'ROG-STRIX-RTX4090-O24G-GAMING',
      designation: 'ASUS ROG STRIX RTX 4090 GAMING OC',
      marque: 'ASUS',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9749-front.jpg',
      img_alt: 'ASUS ROG STRIX RTX 4090 GAMING OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 92,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2610,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 358,
      width: 149,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 459,
      texture_rate: 1336,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 94,
      product_number: null,
      designation: 'MSI RTX 4090 VENTUS 3X OC',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9906-front.jpg',
      img_alt: 'MSI RTX 4090 VENTUS 3X OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 94,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2550,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 322,
      width: 136,
      height: 63,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 449,
      texture_rate: 1305,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 102,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Chinese New Year Gift Box 2023 Vulcan',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10465-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Chinese New Year Gift Box 2023 Vulcan',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 102,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2625,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 349,
      width: 160,
      height: 70,
      tdp: 515,
      psu_needed: 900,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 462,
      texture_rate: 1344,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 104,
      product_number: 'NED4090019SB-1020Q',
      designation: 'Palit RTX 4090 GameRock OmniBlack',
      marque: 'Palit',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9823-front.jpg',
      img_alt: 'Palit RTX 4090 GameRock OmniBlack',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 104,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 329,
      width: 138,
      height: 72,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 107,
      product_number: 'NED4090S19SB-1020G',
      designation: 'Palit RTX 4090 GameRock OC',
      marque: 'Palit',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9775-front.jpg',
      img_alt: 'Palit RTX 4090 GameRock OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 107,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2610,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 329,
      width: 138,
      height: 72,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 459,
      texture_rate: 1336,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 114,
      product_number: null,
      designation: 'MSI RTX 4090 SUPRIM X Classic',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10845-front.jpg',
      img_alt: 'MSI RTX 4090 SUPRIM X Classic',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 114,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2625,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 338,
      width: 140,
      height: 71,
      tdp: 480,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 462,
      texture_rate: 1344,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 115,
      product_number: 'GV-N4090WF3-24GD',
      designation: 'GIGABYTE RTX 4090 WINDFORCE',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9744-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 WINDFORCE',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 115,
      ean: '4719331311476',
      upc: '889523033975',
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 331,
      width: 150,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 117,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Vulcan W OC',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10466-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Vulcan W OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 117,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2625,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 349,
      width: 160,
      height: 70,
      tdp: 515,
      psu_needed: 900,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 462,
      texture_rate: 1344,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 118,
      product_number: null,
      designation: 'GALAX RTX 4090 Boomstar OC',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9871-front.jpg',
      img_alt: 'GALAX RTX 4090 Boomstar OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 118,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 338,
      width: 139,
      height: 69,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 119,
      product_number: 'C4090-246XX-1833FB',
      designation: 'Inno3D iChill RTX 4090 FROSTBITE',
      marque: 'Inno3D',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9974-front.jpg',
      img_alt: 'Inno3D iChill RTX 4090 FROSTBITE',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 119,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 200,
      width: 159,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 120,
      product_number: 'VCG409024TFXMPB',
      designation: 'PNY XLR8 RTX 4090 Uprising EPIC-X Triple Fan',
      marque: 'PNY',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10652-front.jpg',
      img_alt: 'PNY XLR8 RTX 4090 Uprising EPIC-X Triple Fan',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 120,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 351,
      width: 145,
      height: 63,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 124,
      product_number: 'GV-N4090AORUSX W-24GD',
      designation: 'GIGABYTE AORUS RTX 4090 XTREME WATERFORCE Rev. 1.1',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9937-front.jpg',
      img_alt: 'GIGABYTE AORUS RTX 4090 XTREME WATERFORCE Rev. 1.1',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 124,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2565,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 238,
      width: 141,
      height: 40,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 451,
      texture_rate: 1313,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 125,
      product_number: 'GG-RTX4090-E24GB/OC/TP',
      designation: 'KUROUTOSHIKOU RTX 4090 GALAKURO',
      marque: 'KUROUTOSHIKOU',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9867-front.jpg',
      img_alt: 'KUROUTOSHIKOU RTX 4090 GALAKURO',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 125,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 138,
      height: 74,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 127,
      product_number: 'ZT-D40900J-10P',
      designation: 'ZOTAC RTX 4090 Trinity OC',
      marque: 'ZOTAC',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9770-front.jpg',
      img_alt: 'ZOTAC RTX 4090 Trinity OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 127,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2535,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 356,
      width: 165,
      height: 71,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 446,
      texture_rate: 1298,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 129,
      product_number: null,
      designation: 'AX Gaming Renegade RTX 4090 X3W',
      marque: 'AX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9806-front.jpg',
      img_alt: 'AX Gaming Renegade RTX 4090 X3W',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 129,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2550,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 336,
      width: 145,
      height: 60,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 449,
      texture_rate: 1305,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 131,
      product_number: null,
      designation: 'Lenovo RTX 4090 OEM',
      marque: 'Lenovo',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10714-front.jpg',
      img_alt: 'Lenovo RTX 4090 OEM',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 131,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 133,
      product_number: 'GV-N4090AERO OC-24GD',
      designation: 'GIGABYTE RTX 4090 AERO OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10856-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 AERO OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 133,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2535,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 342,
      width: 150,
      height: 75,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 446,
      texture_rate: 1298,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 135,
      product_number: null,
      designation: 'Leadtek WinFast RTX 4090 HURRICANE',
      marque: 'Leadtek',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10118-front.jpg',
      img_alt: 'Leadtek WinFast RTX 4090 HURRICANE',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 135,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 352,
      width: 145,
      height: 68,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 137,
      product_number: 'VCG409024TFXXPB1-O',
      designation: 'PNY XLR8 RTX 4090 VERTO EPIC-X Triple Fan OC',
      marque: 'PNY',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9865-front.jpg',
      img_alt: 'PNY XLR8 RTX 4090 VERTO EPIC-X Triple Fan OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 137,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2565,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 332,
      width: 137,
      height: 71,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 451,
      texture_rate: 1313,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 139,
      product_number: 'NED4090019SB-1020G',
      designation: 'Palit RTX 4090 GameRock',
      marque: 'Palit',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9776-front.jpg',
      img_alt: 'Palit RTX 4090 GameRock',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 139,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 329,
      width: 138,
      height: 72,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 140,
      product_number: 'VCG409024TFXPPB',
      designation: 'PNY XLR8 RTX 4090 REVEL EPIC-X Triple Fan',
      marque: 'PNY',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10854-front.jpg',
      img_alt: 'PNY XLR8 RTX 4090 REVEL EPIC-X Triple Fan',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 140,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 329,
      width: 141,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 141,
      product_number: null,
      designation: 'MSI RTX 4090 SUPRIM',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9754-front.jpg',
      img_alt: 'MSI RTX 4090 SUPRIM',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 141,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2595,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 336,
      width: 142,
      height: 78,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 457,
      texture_rate: 1328,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 142,
      product_number: null,
      designation: 'ZOTAC RTX 4090 AMP Extreme AIRO Moon White',
      marque: 'ZOTAC',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10059-front.jpg',
      img_alt: 'ZOTAC RTX 4090 AMP Extreme AIRO Moon White',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 142,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'White',
      gpu_clock: 2235,
      boost_clock: 2580,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 356,
      width: 166,
      height: 72,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 454,
      texture_rate: 1321,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 143,
      product_number: 'GV-N4090AORUSX W-24GD',
      designation: 'GIGABYTE AORUS RTX 4090 XTREME WATERFORCE',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9797-front.jpg',
      img_alt: 'GIGABYTE AORUS RTX 4090 XTREME WATERFORCE',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 143,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2565,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 238,
      width: 141,
      height: 40,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 451,
      texture_rate: 1313,
      fp32: 84,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 149,
      product_number: null,
      designation: 'MSI RTX 4090 SUPRIM LIQUID',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9758-front.jpg',
      img_alt: 'MSI RTX 4090 SUPRIM LIQUID',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 149,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2595,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 336,
      width: 140,
      height: 43,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 457,
      texture_rate: 1328,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 151,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Advanced',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10472-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Advanced',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 151,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2610,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 344,
      width: 148,
      height: 71,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 459,
      texture_rate: 1336,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 152,
      product_number: null,
      designation: 'MSI RTX 4090 GAMING X TRIO Classic',
      marque: 'MSI',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10844-front.jpg',
      img_alt: 'MSI RTX 4090 GAMING X TRIO Classic',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 152,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2595,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 337,
      width: 140,
      height: 77,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 457,
      texture_rate: 1328,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 153,
      product_number: null,
      designation: 'NVIDIA GeForce RTX 4090 Founders Edition Rev. 2',
      marque: 'NVIDIA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10933-front.jpg',
      img_alt: 'NVIDIA GeForce RTX 4090 Founders Edition Rev. 2',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 153,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: 137,
      height: 61,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 154,
      product_number: null,
      designation: 'GALAX RTX 4090 HOF OC LAB',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9943-front.jpg',
      img_alt: 'GALAX RTX 4090 HOF OC LAB',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 154,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2595,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 344,
      width: 144,
      height: 77,
      tdp: 550,
      psu_needed: 950,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '2 x 16 Pin ',
      pixel_rate: 457,
      texture_rate: 1328,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 159,
      product_number: null,
      designation: 'KFA2 RTX 4090 HOF OC LAB',
      marque: 'KFA2',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10769-front.jpg',
      img_alt: 'KFA2 RTX 4090 HOF OC LAB',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 159,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2595,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 344,
      width: 144,
      height: 77,
      tdp: 550,
      psu_needed: 950,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '2 x 16 Pin ',
      pixel_rate: 457,
      texture_rate: 1328,
      fp32: 85,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 161,
      product_number: 'ROG-STRIX-RTX4090-O24G-WHITE',
      designation: 'ASUS ROG STRIX RTX 4090 GAMING WHITE OC',
      marque: 'ASUS',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9985-front.jpg',
      img_alt: 'ASUS ROG STRIX RTX 4090 GAMING WHITE OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 161,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'White',
      gpu_clock: 2235,
      boost_clock: 2610,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 358,
      width: 149,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 459,
      texture_rate: 1336,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 163,
      product_number: 'VCG409024TFXPB1',
      designation: 'PNY RTX 4090 VERTO Triple Fan',
      marque: 'PNY',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9864-front.jpg',
      img_alt: 'PNY RTX 4090 VERTO Triple Fan',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 163,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2520,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 340,
      width: 143,
      height: 59,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 444,
      texture_rate: 1290,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 164,
      product_number: null,
      designation: 'Colorful iGame RTX 4090 Advanced OC',
      marque: 'Colorful',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9849-front.jpg',
      img_alt: 'Colorful iGame RTX 4090 Advanced OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 164,
      ean: null,
      upc: null,
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2610,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 344,
      width: 148,
      height: 71,
      tdp: 490,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 459,
      texture_rate: 1336,
      fp32: 86,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 1,
      product_number: '24G-P5-4999-KR',
      designation: 'EVGA RTX 3090 Ti FTW3 KINGPIN',
      marque: 'EVGA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9583-front.jpg',
      img_alt: 'EVGA RTX 3090 Ti FTW3 KINGPIN',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 1,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1950,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '2 x 16 Pin ',
      pixel_rate: 218,
      texture_rate: 655,
      fp32: 42,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: 1411.67,
      nb_note: 2,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 2,
      nb_note_5: 0
    },
    {
      Id_article: 6,
      product_number: 'GV-N309TAORUSX W-24GD',
      designation: 'GIGABYTE AORUS RTX 3090 Ti XTREME WATERFORCE',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9552-front.jpg',
      img_alt: 'GIGABYTE AORUS RTX 3090 Ti XTREME WATERFORCE',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 6,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1935,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 238,
      width: 141,
      height: 40,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 217,
      texture_rate: 650,
      fp32: 42,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 1,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 1
    },
    {
      Id_article: 8,
      product_number: 'ROG-STRIX-LC-RTX3090Ti-O24G-GAMING',
      designation: 'ASUS ROG STRIX LC RTX 3090 Ti OC',
      marque: 'ASUS',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9547-front.jpg',
      img_alt: 'ASUS ROG STRIX LC RTX 3090 Ti OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 8,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1950,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 293,
      width: 133,
      height: 52,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 218,
      texture_rate: 655,
      fp32: 42,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 1,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 1,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 9,
      product_number: 'VCG3090T24TFXMPB',
      designation: 'PNY XLR8 RTX 3090 Ti UPRISING EPIC-X',
      marque: 'PNY',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9569-front.jpg',
      img_alt: 'PNY XLR8 RTX 3090 Ti UPRISING EPIC-X',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 9,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1860,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 320,
      width: 138,
      height: 58,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 208,
      texture_rate: 625,
      fp32: 40,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 10,
      product_number: null,
      designation: 'Gainward RTX 3090 Ti GLARE OC',
      marque: 'Gainward',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10114-front.jpg',
      img_alt: 'Gainward RTX 3090 Ti GLARE OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 10,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1905,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 355,
      width: 151,
      height: 70,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 213,
      texture_rate: 640,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 14,
      product_number: null,
      designation: 'KFA2 RTX 3090 Ti HOF OC Lab Edition',
      marque: 'KFA2',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10007-front.jpg',
      img_alt: 'KFA2 RTX 3090 Ti HOF OC Lab Edition',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 14,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1920,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 343,
      width: 145,
      height: 68,
      tdp: 480,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 215,
      texture_rate: 645,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 15,
      product_number: '24G-P5-4998-KR',
      designation: 'EVGA RTX 3090 Ti FTW3 KINGPIN HYBRID',
      marque: 'EVGA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9562-front.jpg',
      img_alt: 'EVGA RTX 3090 Ti FTW3 KINGPIN HYBRID',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 15,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1950,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 289,
      width: 138,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '2 x 16 Pin ',
      pixel_rate: 218,
      texture_rate: 655,
      fp32: 42,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 19,
      product_number: '39IXM5MD6HEX',
      designation: 'GALAX RTX 3090 Ti EX Gamer (1-Click OC)',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9575-front.jpg',
      img_alt: 'GALAX RTX 3090 Ti EX Gamer (1-Click OC)',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 19,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1890,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 322,
      width: 132,
      height: 62,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 212,
      texture_rate: 635,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 22,
      product_number: '24G-P5-4985-KR',
      designation: 'EVGA RTX 3090 Ti FTW3 ULTRA',
      marque: 'EVGA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9548-front.jpg',
      img_alt: 'EVGA RTX 3090 Ti FTW3 ULTRA',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 22,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1920,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 300,
      width: 137,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 215,
      texture_rate: 645,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 25,
      product_number: 'VCG3090T24TFXMPB-O',
      designation: 'PNY XLR8 RTX 3090 Ti UPRISING EPIC-X OC',
      marque: 'PNY',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9568-front.jpg',
      img_alt: 'PNY XLR8 RTX 3090 Ti UPRISING EPIC-X OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 25,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1875,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 320,
      width: 138,
      height: 58,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 210,
      texture_rate: 630,
      fp32: 40,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 32,
      product_number: 'NED309TS19SB-1022G',
      designation: 'Palit RTX 3090 Ti GameRock OC',
      marque: 'Palit',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9531-front.jpg',
      img_alt: 'Palit RTX 3090 Ti GameRock OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 32,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1890,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 314,
      width: 137,
      height: 65,
      tdp: 460,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 212,
      texture_rate: 635,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 34,
      product_number: null,
      designation: 'GALAX RTX 3090 Ti Xingyao OC',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9580-front.jpg',
      img_alt: 'GALAX RTX 3090 Ti Xingyao OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 34,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1890,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 349,
      width: 141,
      height: 66,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 212,
      texture_rate: 635,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 43,
      product_number: null,
      designation: 'GALAX RTX 3090 Ti HOF OC Lab Edition',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9573-front.jpg',
      img_alt: 'GALAX RTX 3090 Ti HOF OC Lab Edition',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 43,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1920,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 343,
      width: 145,
      height: 68,
      tdp: 480,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '2 x 16 Pin ',
      pixel_rate: 215,
      texture_rate: 645,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 45,
      product_number: '39IXM5MD5ZEH',
      designation: 'GALAX RTX 3090 Ti HOF OC',
      marque: 'GALAX',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/10006-front.jpg',
      img_alt: 'GALAX RTX 3090 Ti HOF OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 45,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1920,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 339,
      width: 144,
      height: 68,
      tdp: 480,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '2 x 16 Pin ',
      pixel_rate: 215,
      texture_rate: 645,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 53,
      product_number: 'N309T3-246XX-1890VA46',
      designation: 'Inno3D RTX 3090 Ti X3 OC',
      marque: 'Inno3D',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9564-front.jpg',
      img_alt: 'Inno3D RTX 3090 Ti X3 OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 53,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1890,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 330,
      width: 140,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 212,
      texture_rate: 635,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 55,
      product_number: 'TUF-RTX3090TI-O24G-GAMING',
      designation: 'ASUS TUF RTX 3090 Ti GAMING OC',
      marque: 'ASUS',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9570-front.jpg',
      img_alt: 'ASUS TUF RTX 3090 Ti GAMING OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 55,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1920,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 326,
      width: 140,
      height: 63,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 2,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 215,
      texture_rate: 645,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 63,
      product_number: '24G-P5-4981-KR',
      designation: 'EVGA RTX 3090 Ti FTW3 BLACK',
      marque: 'EVGA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9559-front.jpg',
      img_alt: 'EVGA RTX 3090 Ti FTW3 BLACK',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 63,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1860,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 300,
      width: 137,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 208,
      texture_rate: 625,
      fp32: 40,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 64,
      product_number: '24G-P5-4983-KR',
      designation: 'EVGA RTX 3090 Ti FTW3',
      marque: 'EVGA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9558-front.jpg',
      img_alt: 'EVGA RTX 3090 Ti FTW3',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 64,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1890,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: 300,
      width: 137,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 212,
      texture_rate: 635,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 69,
      product_number: 'C309T-246XX-1890FB',
      designation: 'Inno3D iChill RTX 3090 Ti FROSTBITE',
      marque: 'Inno3D',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9563-front.jpg',
      img_alt: 'Inno3D iChill RTX 3090 Ti FROSTBITE',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 69,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1890,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 2,
      length: 220,
      width: 160,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 212,
      texture_rate: 635,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 77,
      product_number: '24G-P5-4988-KR',
      designation: 'EVGA RTX 3090 Ti FTW3 ULTRA HYBRID',
      marque: 'EVGA',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9560-front.jpg',
      img_alt: 'EVGA RTX 3090 Ti FTW3 ULTRA HYBRID',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 77,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1920,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 3,
      length: null,
      width: null,
      height: null,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 215,
      texture_rate: 645,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    {
      Id_article: 79,
      product_number: 'GeForce® RTX 3090Ti-24G6X PGF OC',
      designation: 'ZOTAC RTX 3090 Ti PGF OC',
      marque: 'ZOTAC',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9582-front.jpg',
      img_alt: 'ZOTAC RTX 3090 Ti PGF OC',
      Id_model: 2,
      model_name: 'RTX 3000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 79,
      ean: null,
      upc: null,
      chipset: '3090Ti',
      color: 'Black',
      gpu_clock: 1560,
      boost_clock: 1890,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 309,
      width: 139,
      height: 73,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 212,
      texture_rate: 635,
      fp32: 41,
      shader: 10752,
      tmu: 336,
      rop: 112,
      sm_cu: 874,
      tensor_cores: 336,
      rt_cores: 84,
      latest_price: null,
      nb_note: 0,
      nb_note_1: 0,
      nb_note_2: 0,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    },
    ... 67 more items
  ]
] 
24/05/23 21:03:40 :: ---> Sortie de la method selectAllgpu de compareController // 
24/05/23 21:03:40 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:03:41 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:03:41 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg1ODE5MDA3fQ.J2Fy0kCSZO6pwXYLVXP4vWuw4Hh5hD7ivDU5BnL3uUI 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur',
  iat: 1684955007,
  exp: 1685819007
} 
24/05/23 21:03:41 :: // Appel de la method shaForOneArticle de compareController// 
24/05/23 21:03:41 :: // Appel de la method selectOneArticle de compareController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la method historiqueForOneArticle de compareController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la method sellerForOneArticle de compareController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la method selectCommentsByIdArticle de compareController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:03:41 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: null,
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:03:27.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":null},"role":"Utilisateur"} 
24/05/23 21:03:41 :: // Appel de la method isFavorited de favoriteController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée: 
  SELECT 
  a.*, m.*, c.*, g.*, h.price AS latest_price,
  COUNT(*) AS nb_note,
  CAST(SUM(CASE WHEN co.note = 1 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_1,
  CAST(SUM(CASE WHEN co.note = 2 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_2,
  CAST(SUM(CASE WHEN co.note = 3 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_3,
  CAST(SUM(CASE WHEN co.note = 4 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_4,
  CAST(SUM(CASE WHEN co.note = 5 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_5
  FROM article a
  JOIN model m ON a.Id_model = m.Id_model
  JOIN category c ON m.Id_category = c.Id_category
  LEFT JOIN gpu g ON a.Id_article = g.Id_article
  LEFT JOIN (
    SELECT Id_article, note
    FROM comment
    WHERE Id_article = ?
  ) co ON a.Id_article = co.Id_article
  LEFT JOIN (
    SELECT s.Id_article, MAX(s.Id_historique_prix) AS max_historique_prix
    FROM seller_historique_article s
    GROUP BY s.Id_article
  ) latest_seller_historique_article ON a.Id_article = latest_seller_historique_article.Id_article
  LEFT JOIN historique_prix h ON latest_seller_historique_article.max_historique_prix = h.Id_historique_prix
  WHERE a.Id_article = ?
   
24/05/23 21:03:41 :: ==>Retour de la requete: [
  [
    {
      Id_article: 2,
      product_number: 'GV-N4090GAMING OC-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9743-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 2,
      ean: null,
      upc: '889523033845',
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2535,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 340,
      width: 150,
      height: 75,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 446,
      texture_rate: 1298,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 3,
      nb_note_1: 1,
      nb_note_2: 2,
      nb_note_3: 0,
      nb_note_4: 0,
      nb_note_5: 0
    }
  ]
] 
24/05/23 21:03:41 :: ---> Sortie de la method selectOneArticle de compareController // 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée: 
  SELECT *
  FROM seller_historique_article
  WHERE seller_historique_article.Id_article = ?;
 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: ---> Sortie de la method shaForOneArticle de compareController // 
24/05/23 21:03:41 :: => Requete appelée: 
  SELECT historique_prix.Id_historique_prix, historique_prix.price, historique_prix._date
FROM seller_historique_article
JOIN historique_prix ON historique_prix.Id_historique_prix = seller_historique_article.Id_historique_prix
WHERE seller_historique_article.Id_article = ?;
 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: ---> Sortie de la method historiqueForOneArticle de compareController // 
24/05/23 21:03:41 :: => Requete appelée: 
  SELECT DISTINCT seller.Id_seller, seller.seller_name, seller.img_src_seller, seller.img_alt_seller
  FROM seller
  JOIN (
     SELECT DISTINCT Id_seller
     FROM seller_historique_article
     WHERE Id_article = ?
  ) AS sha ON seller.Id_seller = sha.Id_seller;  
 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: ---> Sortie de la method sellerForOneArticle de compareController // 
24/05/23 21:03:41 :: => Requete appelée: 
  SELECT * FROM comment WHERE Id_article = ?
 
24/05/23 21:03:41 :: ==>Retour de la requete: [
  [
    {
      Id_comment: 5,
      content: 'Not bad for the price. Does the job.',
      note: 2,
      createdBy: 'TestPseudo_510',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-15T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 960,
      Id_article: 2
    },
    {
      Id_comment: 6,
      content: 'I would not recommend this product. Had a lot of issues.',
      note: 2,
      createdBy: 'TestPseudo_656',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-14T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 816,
      Id_article: 2
    },
    {
      Id_comment: 23,
      content: 'The worst !!!!!!!!!!!!',
      note: 1,
      createdBy: 'Secutorz',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-21T16:53:29.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 6,
      Id_article: 2
    }
  ]
] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: ---> Sortie de la method selectCommentsByIdArticle de compareController // 
24/05/23 21:03:41 :: => Requete appelée: 
        SELECT *
        FROM customer_article
        WHERE Id_customer = ?
        AND Id_article = ?;
       
24/05/23 21:03:41 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:41 :: ---> Sortie de la method isFavorited de favoriteController // 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:41 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:41 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:41 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:41 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:41 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:41 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:41 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:41 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:41 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:41 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:41 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:41 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:41 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:41 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:03:49 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:03:49 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg1ODE5MDA3fQ.J2Fy0kCSZO6pwXYLVXP4vWuw4Hh5hD7ivDU5BnL3uUI 
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur',
  iat: 1684955007,
  exp: 1685819007
} 
24/05/23 21:03:49 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: null,
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:03:27.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":null},"role":"Utilisateur"} 
24/05/23 21:03:49 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: // Appel de la method addComment de commentsController// 
24/05/23 21:03:49 :: => Requete appelée: 
    INSERT INTO comment (Id_customer, Id_article, note , content, createdBy) 
    VALUES (?, ?, ?, ?, ?);    
     
24/05/23 21:03:49 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 41,
    info: '',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: // Appel de la method selectCommentsByIdArticle de compareController// 
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: // Appel de la method selectOneArticle de compareController// 
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: // Appel de la method shaForOneArticle de compareController// 
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: // Appel de la method historiqueForOneArticle de compareController// 
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: => Requete appelée: 
  SELECT * FROM comment WHERE Id_article = ?
 
24/05/23 21:03:49 :: // Appel de la method sellerForOneArticle de compareController// 
24/05/23 21:03:49 :: ---> Sortie de la method selectCommentsByIdArticle de compareController // 
24/05/23 21:03:49 :: => Requete appelée: 
  SELECT 
  a.*, m.*, c.*, g.*, h.price AS latest_price,
  COUNT(*) AS nb_note,
  CAST(SUM(CASE WHEN co.note = 1 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_1,
  CAST(SUM(CASE WHEN co.note = 2 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_2,
  CAST(SUM(CASE WHEN co.note = 3 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_3,
  CAST(SUM(CASE WHEN co.note = 4 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_4,
  CAST(SUM(CASE WHEN co.note = 5 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_5
  FROM article a
  JOIN model m ON a.Id_model = m.Id_model
  JOIN category c ON m.Id_category = c.Id_category
  LEFT JOIN gpu g ON a.Id_article = g.Id_article
  LEFT JOIN (
    SELECT Id_article, note
    FROM comment
    WHERE Id_article = ?
  ) co ON a.Id_article = co.Id_article
  LEFT JOIN (
    SELECT s.Id_article, MAX(s.Id_historique_prix) AS max_historique_prix
    FROM seller_historique_article s
    GROUP BY s.Id_article
  ) latest_seller_historique_article ON a.Id_article = latest_seller_historique_article.Id_article
  LEFT JOIN historique_prix h ON latest_seller_historique_article.max_historique_prix = h.Id_historique_prix
  WHERE a.Id_article = ?
   
24/05/23 21:03:49 :: ==>Retour de la requete: [
  [
    {
      Id_article: 2,
      product_number: 'GV-N4090GAMING OC-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9743-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 2,
      ean: null,
      upc: '889523033845',
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2535,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 340,
      width: 150,
      height: 75,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 446,
      texture_rate: 1298,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 4,
      nb_note_1: 1,
      nb_note_2: 2,
      nb_note_3: 0,
      nb_note_4: 1,
      nb_note_5: 0
    }
  ]
] 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ---> Sortie de la method selectOneArticle de compareController // 
24/05/23 21:03:49 :: => Requete appelée: 
  SELECT *
  FROM seller_historique_article
  WHERE seller_historique_article.Id_article = ?;
 
24/05/23 21:03:49 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ---> Sortie de la method shaForOneArticle de compareController // 
24/05/23 21:03:49 :: => Requete appelée: 
  SELECT historique_prix.Id_historique_prix, historique_prix.price, historique_prix._date
FROM seller_historique_article
JOIN historique_prix ON historique_prix.Id_historique_prix = seller_historique_article.Id_historique_prix
WHERE seller_historique_article.Id_article = ?;
 
24/05/23 21:03:49 :: ==>Retour de la requete: [
  [
    {
      Id_comment: 41,
      content: 'Le top !!!!!!!',
      note: 4,
      createdBy: 'Bobby',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-24T19:03:49.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 14,
      Id_article: 2
    },
    {
      Id_comment: 5,
      content: 'Not bad for the price. Does the job.',
      note: 2,
      createdBy: 'TestPseudo_510',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-15T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 960,
      Id_article: 2
    },
    {
      Id_comment: 6,
      content: 'I would not recommend this product. Had a lot of issues.',
      note: 2,
      createdBy: 'TestPseudo_656',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-14T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 816,
      Id_article: 2
    },
    {
      Id_comment: 23,
      content: 'The worst !!!!!!!!!!!!',
      note: 1,
      createdBy: 'Secutorz',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-21T16:53:29.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 6,
      Id_article: 2
    }
  ]
] 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:49 :: => Requete appelée: 
  SELECT DISTINCT seller.Id_seller, seller.seller_name, seller.img_src_seller, seller.img_alt_seller
  FROM seller
  JOIN (
     SELECT DISTINCT Id_seller
     FROM seller_historique_article
     WHERE Id_article = ?
  ) AS sha ON seller.Id_seller = sha.Id_seller;  
 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ---> Sortie de la method historiqueForOneArticle de compareController // 
24/05/23 21:03:49 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ---> Sortie de la method sellerForOneArticle de compareController // 
24/05/23 21:03:49 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:49 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:49 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:49 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:49 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:49 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:49 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:49 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:53 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:53 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:53 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:53 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:53 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:53 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:03:53 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:03:53 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:03:53 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:03:53 :: ==>Retour de la requete: [ [ { img_src: null } ] ] 
24/05/23 21:03:53 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:03:53 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:04:03 :: // Appel de la method uploadAvatarByIdCustomer de avatarController// 
24/05/23 21:04:03 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:03 :: => Requete appelée: UPDATE customer SET img_src = ? WHERE Id_customer = ? 
24/05/23 21:04:03 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: 'Enregistrements correspondants: 1  Modifiés: 1  Warnings: 0',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 21:04:03 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:06 :: ===================================================== 
24/05/23 21:04:06 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg0OTU4NjA3fQ.vqe58bvI3AtPwQBq13RoV9nb4QNSyFhahlJCftA0eHo 
24/05/23 21:04:06 :: // Appel de la method handleAuth de authController // 
24/05/23 21:04:06 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 21:04:06 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:04:06 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:04:06 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg1ODE5MDA3fQ.J2Fy0kCSZO6pwXYLVXP4vWuw4Hh5hD7ivDU5BnL3uUI 
24/05/23 21:04:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:06 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur',
  iat: 1684955007,
  exp: 1685819007
} 
24/05/23 21:04:06 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:06 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:04:06 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:04:06 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:03:27.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:04:06 :: // Appel de la method selectOneCustomer // 
24/05/23 21:04:06 :: ?? Nous tetons de chercher les infos de l'utilisateur avec l'id: 14 
24/05/23 21:04:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:06 :: => Requete appelée: SELECT customer.*, role.*, account.email
  FROM customer
  INNER JOIN role ON customer.Id_role = role.Id_role
  INNER JOIN account ON customer.Id_account = account.Id_account
  WHERE customer.Id_customer = ? AND customer.deletedBy IS NULL;
   
24/05/23 21:04:06 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur',
      email: 'maxence.allart@gmail.com'
    }
  ]
] 
24/05/23 21:04:06 :: ?? Nous avons trouvé l'utilisateur avec l'id 14: ses infos : {
  account: { email: 'maxence.allart@gmail.com' },
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: 2023-05-24T19:03:27.000Z,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: { title: 'Utilisateur' }
} 
24/05/23 21:04:06 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:06 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:04:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:06 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:04:06 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:06 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:04:06 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:04:06 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:04:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:06 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:04:06 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:04:06 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:06 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:04:09 :: ===================================================== 
24/05/23 21:04:09 :: // Appel de la method handleAuth de authController // 
24/05/23 21:04:09 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 21:04:09 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg0OTU4NjA3fQ.vqe58bvI3AtPwQBq13RoV9nb4QNSyFhahlJCftA0eHo 
24/05/23 21:04:09 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:04:09 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:04:09 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjpudWxsLCJjcmVhdGVkQnkiOiJzaXRlIiwiY3JlYXRlZEF0IjpudWxsLCJtb2RpZmllZEJ5IjpudWxsLCJtb2RpZmllZEF0IjpudWxsLCJkZWxldGVkQnkiOm51bGwsImRlbGV0ZWRBdCI6bnVsbCwiaW1nX3NyYyI6bnVsbH0sInJvbGUiOiJVdGlsaXNhdGV1ciIsImlhdCI6MTY4NDk1NTAwNywiZXhwIjoxNjg1ODE5MDA3fQ.J2Fy0kCSZO6pwXYLVXP4vWuw4Hh5hD7ivDU5BnL3uUI 
24/05/23 21:04:09 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur',
  iat: 1684955007,
  exp: 1685819007
} 
24/05/23 21:04:09 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:09 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:04:09 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:04:09 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:09 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:03:27.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:04:09 :: // Appel de la method selectOneCustomer // 
24/05/23 21:04:09 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:09 :: ?? Nous tetons de chercher les infos de l'utilisateur avec l'id: 14 
24/05/23 21:04:09 :: => Requete appelée: SELECT customer.*, role.*, account.email
  FROM customer
  INNER JOIN role ON customer.Id_role = role.Id_role
  INNER JOIN account ON customer.Id_account = account.Id_account
  WHERE customer.Id_customer = ? AND customer.deletedBy IS NULL;
   
24/05/23 21:04:09 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur',
      email: 'maxence.allart@gmail.com'
    }
  ]
] 
24/05/23 21:04:09 :: ?? Nous avons trouvé l'utilisateur avec l'id 14: ses infos : {
  account: { email: 'maxence.allart@gmail.com' },
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: 2023-05-24T19:03:27.000Z,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: { title: 'Utilisateur' }
} 
24/05/23 21:04:09 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:09 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:09 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:04:09 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:09 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:04:09 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:04:09 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:04:09 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:04:09 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:09 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:04:09 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:04:09 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:09 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:04:11 :: // Appel de la method handleLogout de loginController // 
24/05/23 21:04:11 :: ------------------------------------------------------- 
24/05/23 21:04:11 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: null,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: null
  },
  role: 'Utilisateur',
  iat: 1684955007,
  exp: 1685819007
} 
24/05/23 21:04:19 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 21:04:19 :: // Appel de la method handleLogin de loginController // 
24/05/23 21:04:19 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:19 :: => Requete appelée:         
      SELECT account.email, account.password, customer.*, role.*
      FROM account
      JOIN customer ON account.Id_account = customer.Id_account
      JOIN role ON customer.Id_role = role.Id_role
      WHERE account.email = ?
       
24/05/23 21:04:19 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:03:27.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:04:19 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:19 :: ?? Le customer trouvé est: {
  Id_account: 16,
  Id_customer: 14,
  Id_role: 1,
  pseudo: 'Bobby',
  firstname: 'aaaaaaaaaa',
  lastname: 'bbbbbbbbbb',
  last_connection: 2023-05-24T19:03:27.000Z,
  createdBy: 'site',
  createdAt: null,
  modifiedBy: null,
  modifiedAt: null,
  deletedBy: null,
  deletedAt: null,
  img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
} 
24/05/23 21:04:19 :: ?? L'account trouvé est: {
  email: 'maxence.allart@gmail.com',
  password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi'
} 
24/05/23 21:04:19 :: ?? Le role trouvé est: { title: 'Utilisateur' } 
24/05/23 21:04:19 :: !! Comparons le mots de passe reçu le résultat est : true 
24/05/23 21:04:19 :: ?? Tentative de mise à jour de la last_connection 
24/05/23 21:04:19 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:19 :: => Requete appelée: 
      UPDATE customer
      SET last_connection = NOW()
      WHERE Id_customer = ?;
       
24/05/23 21:04:19 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: 'Enregistrements correspondants: 1  Modifiés: 1  Warnings: 0',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 21:04:19 :: --> last_connection mis à jour avec succès. 
24/05/23 21:04:19 :: ?? Pour information, un accessToken a été créé pour 1h : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODQ5NTg2NTl9.S3Tvm01L2KMptm4pMwzv8A3fO6oclHnFZkvuo3WY-bY 
24/05/23 21:04:19 :: ?? Pour information, un refreshToken a été créé pour 10d : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:04:19 :: ==> Login avec succes ! Envoi du refreshToken en cookie, envoi des données + envoi du accessToken. 
24/05/23 21:04:19 :: !! L'objet préparé pour le retour au Front est le suivant : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: 2023-05-24T19:03:27.000Z,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur'
} 
24/05/23 21:04:19 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:19 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:04:19 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:04:19 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:04:19 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:04:19 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:04:19 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:09 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:09 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:09 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:09 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:05:09 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:05:09 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:09 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:09 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:09 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:09 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:05:09 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:09 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:05:10 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:05:10 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:05:10 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:05:10 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:05:10 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:10 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:05:10 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:10 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:05:10 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:05:10 :: // Appel de la method getAllFavoriteByIdCustomer de favoriteController// 
24/05/23 21:05:10 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:10 :: => Requete appelée: 
      SELECT ca.*, a.*, c.*
      FROM customer_article ca
      JOIN article a ON ca.Id_article = a.Id_article
      JOIN model m ON a.Id_model = m.Id_model
      JOIN category c ON m.Id_category = c.Id_category
      WHERE ca.Id_customer = ?;
          
       
24/05/23 21:05:10 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:10 :: ---> Sortie de la method getAllFavoriteByIdCustomer de favoriteController // 
24/05/23 21:05:10 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:05:11 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:05:11 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:05:11 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:05:11 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:05:11 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:11 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:05:11 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:05:11 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:05:11 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:11 :: // Appel de la méthode getAllCommentsByIdCustomer de commentsController // 
24/05/23 21:05:11 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:11 :: => Requete appelée: 
        SELECT c.*, a.*, cat.*
        FROM comment c
        JOIN article a ON c.Id_article = a.Id_article
        JOIN model m ON a.Id_model = m.Id_model
        JOIN category cat ON m.Id_category = cat.Id_category
        WHERE c.Id_customer = ?
         
24/05/23 21:05:11 :: ==>Retour de la requete: [
  [
    {
      Id_comment: 41,
      content: 'Le top !!!!!!!',
      note: 4,
      createdBy: 'Bobby',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-24T19:03:49.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 14,
      Id_article: 2,
      product_number: 'GV-N4090GAMING OC-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9743-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING OC',
      Id_model: 1,
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique'
    }
  ]
] 
24/05/23 21:05:11 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:05:12 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:05:12 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:05:12 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la method selectOneArticle de compareController// 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la method shaForOneArticle de compareController// 
24/05/23 21:05:12 :: // Appel de la method historiqueForOneArticle de compareController// 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la method sellerForOneArticle de compareController// 
24/05/23 21:05:12 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:05:12 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la method isFavorited de favoriteController// 
24/05/23 21:05:12 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: => Requete appelée: 
  SELECT 
  a.*, m.*, c.*, g.*, h.price AS latest_price,
  COUNT(*) AS nb_note,
  CAST(SUM(CASE WHEN co.note = 1 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_1,
  CAST(SUM(CASE WHEN co.note = 2 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_2,
  CAST(SUM(CASE WHEN co.note = 3 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_3,
  CAST(SUM(CASE WHEN co.note = 4 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_4,
  CAST(SUM(CASE WHEN co.note = 5 THEN 1 ELSE 0 END) AS SIGNED) AS nb_note_5
  FROM article a
  JOIN model m ON a.Id_model = m.Id_model
  JOIN category c ON m.Id_category = c.Id_category
  LEFT JOIN gpu g ON a.Id_article = g.Id_article
  LEFT JOIN (
    SELECT Id_article, note
    FROM comment
    WHERE Id_article = ?
  ) co ON a.Id_article = co.Id_article
  LEFT JOIN (
    SELECT s.Id_article, MAX(s.Id_historique_prix) AS max_historique_prix
    FROM seller_historique_article s
    GROUP BY s.Id_article
  ) latest_seller_historique_article ON a.Id_article = latest_seller_historique_article.Id_article
  LEFT JOIN historique_prix h ON latest_seller_historique_article.max_historique_prix = h.Id_historique_prix
  WHERE a.Id_article = ?
   
24/05/23 21:05:12 :: ==>Retour de la requete: [
  [
    {
      Id_article: 2,
      product_number: 'GV-N4090GAMING OC-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9743-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING OC',
      Id_model: 1,
      model_name: 'RTX 4000',
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique',
      Id_gpu: 2,
      ean: null,
      upc: '889523033845',
      chipset: '4090',
      color: 'Black',
      gpu_clock: 2235,
      boost_clock: 2535,
      memory_clock: 1313,
      bus_interface: '4.0 x16',
      bus_width: 384,
      memory_vram: 24,
      slot_width: 4,
      length: 340,
      width: 150,
      height: 75,
      tdp: 450,
      psu_needed: 850,
      nb_hdmi: 1,
      nb_dp: 3,
      nb_usbc: 0,
      power_connector: '1 x 16 Pin ',
      pixel_rate: 446,
      texture_rate: 1298,
      fp32: 83,
      shader: 16384,
      tmu: 512,
      rop: 176,
      sm_cu: 128,
      tensor_cores: 512,
      rt_cores: 128,
      latest_price: null,
      nb_note: 4,
      nb_note_1: 1,
      nb_note_2: 2,
      nb_note_3: 0,
      nb_note_4: 1,
      nb_note_5: 0
    }
  ]
] 
24/05/23 21:05:12 :: ---> Sortie de la method selectOneArticle de compareController // 
24/05/23 21:05:12 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: => Requete appelée: 
  SELECT *
  FROM seller_historique_article
  WHERE seller_historique_article.Id_article = ?;
 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: ---> Sortie de la method shaForOneArticle de compareController // 
24/05/23 21:05:12 :: => Requete appelée: 
  SELECT historique_prix.Id_historique_prix, historique_prix.price, historique_prix._date
FROM seller_historique_article
JOIN historique_prix ON historique_prix.Id_historique_prix = seller_historique_article.Id_historique_prix
WHERE seller_historique_article.Id_article = ?;
 
24/05/23 21:05:12 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: ---> Sortie de la method historiqueForOneArticle de compareController // 
24/05/23 21:05:12 :: => Requete appelée: 
  SELECT DISTINCT seller.Id_seller, seller.seller_name, seller.img_src_seller, seller.img_alt_seller
  FROM seller
  JOIN (
     SELECT DISTINCT Id_seller
     FROM seller_historique_article
     WHERE Id_article = ?
  ) AS sha ON seller.Id_seller = sha.Id_seller;  
 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: ---> Sortie de la method sellerForOneArticle de compareController // 
24/05/23 21:05:12 :: => Requete appelée: 
        SELECT *
        FROM customer_article
        WHERE Id_customer = ?
        AND Id_article = ?;
       
24/05/23 21:05:12 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:05:12 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:05:12 :: ---> Sortie de la method isFavorited de favoriteController // 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la method selectCommentsByIdArticle de compareController// 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: => Requete appelée: 
  SELECT * FROM comment WHERE Id_article = ?
 
24/05/23 21:05:12 :: ==>Retour de la requete: [
  [
    {
      Id_comment: 41,
      content: 'Le top !!!!!!!',
      note: 4,
      createdBy: 'Bobby',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-24T19:03:49.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 14,
      Id_article: 2
    },
    {
      Id_comment: 5,
      content: 'Not bad for the price. Does the job.',
      note: 2,
      createdBy: 'TestPseudo_510',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-15T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 960,
      Id_article: 2
    },
    {
      Id_comment: 6,
      content: 'I would not recommend this product. Had a lot of issues.',
      note: 2,
      createdBy: 'TestPseudo_656',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-14T22:00:00.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 816,
      Id_article: 2
    },
    {
      Id_comment: 23,
      content: 'The worst !!!!!!!!!!!!',
      note: 1,
      createdBy: 'Secutorz',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-21T16:53:29.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 6,
      Id_article: 2
    }
  ]
] 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: ---> Sortie de la method selectCommentsByIdArticle de compareController // 
24/05/23 21:05:12 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:12 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:05:12 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:12 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:12 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:12 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:12 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:05:12 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:12 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:05:12 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:05:13 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:13 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:13 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:13 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:13 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:13 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:05:13 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:13 :: Aucun avatar trouvé pour ce client. 
24/05/23 21:05:13 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:13 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:13 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:13 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:05:13 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:05:13 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:13 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:05:13 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:13 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:13 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:05:13 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:13 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:13 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:13 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:05:13 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:13 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:05:13 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:13 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:13 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:05:13 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:05:13 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:13 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:13 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:05:13 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:13 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:05:13 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:05:13 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:05:13 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:15 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:05:15 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:05:15 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:05:15 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:15 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:05:15 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:05:15 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:05:15 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:05:15 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:15 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:15 :: // Appel de la method addFavoriteByIdCustomer de favoriteController// 
24/05/23 21:05:15 :: => Requete appelée: 
    INSERT INTO customer_article (Id_customer, Id_article) 
    VALUES (?, ?);
     
24/05/23 21:05:15 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: '',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 21:05:15 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:15 :: ---> Sortie de la method addFavoriteByIdCustomer de favoriteController // 
24/05/23 21:05:15 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:05:15 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:05:15 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:05:15 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:05:15 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:15 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:05:15 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:05:15 :: // Appel de la method isFavorited de favoriteController// 
24/05/23 21:05:15 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:15 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:05:15 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:15 :: => Requete appelée: 
        SELECT *
        FROM customer_article
        WHERE Id_customer = ?
        AND Id_article = ?;
       
24/05/23 21:05:15 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:15 :: ==>Retour de la requete: [ [ { Id_customer: 14, Id_article: 2 } ] ] 
24/05/23 21:05:15 :: ---> Sortie de la method isFavorited de favoriteController // 
24/05/23 21:05:19 :: // Appel de la method selectAll de carouselController// 
24/05/23 21:05:19 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:19 :: => Requete appelée: SELECT * FROM carousel WHERE deletedBy = 0 
24/05/23 21:05:19 :: ==>Retour de la requete: [
  [
    {
      id: 1,
      img_src: 'https://picsum.photos/id/1/800/300',
      img_alt: 'lien vers builder',
      description: 'Venez découvrir le builder !',
      button_text: 'Découvrir içi',
      createdAt: 2023-04-23T17:03:47.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:03:47.000Z,
      modifiedBy: 'site',
      navigate_to: 'builder',
      long_description: "Le builder est un outil qui permet de constuire sa config, il permet d'assurer la compatibilité entre les composants.\r\n" +
        "Et combiné avec le comparateur, c'est le meilleur moyen de faire une config au meilleur prix !"
    },
    {
      id: 2,
      img_src: 'https://picsum.photos/id/2/850/400',
      img_alt: 'lien vers page about',
      description: 'Venez découvrir qui nous-sommes !',
      button_text: 'Cliquez ici',
      createdAt: 2023-04-23T17:27:05.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:27:05.000Z,
      modifiedBy: 'site',
      navigate_to: 'about',
      long_description: ''
    },
    {
      id: 3,
      img_src: 'https://picsum.photos/id/3/850/500',
      img_alt: 'lien vers compare',
      description: 'Venez découvrir le comparateur ! Trouvez les meilleurs prix ',
      button_text: 'Trouver les meilleurs prix',
      createdAt: 2023-04-23T17:28:04.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:28:04.000Z,
      modifiedBy: 'site',
      navigate_to: 'compare',
      long_description: ''
    },
    {
      id: 4,
      img_src: 'https://picsum.photos/id/4/850/600',
      img_alt: 'lien vers test',
      description: 'hello world',
      button_text: 'hello',
      createdAt: 2023-04-23T17:29:09.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:29:09.000Z,
      modifiedBy: 'site',
      navigate_to: 'themes',
      long_description: ''
    }
  ]
] 
24/05/23 21:05:19 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:19 :: ---> Sortie de la method selectAll de carouselController // 
24/05/23 21:05:32 :: // Appel de la method selectAll de carouselController// 
24/05/23 21:05:32 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:05:32 :: => Requete appelée: SELECT * FROM carousel WHERE deletedBy = 0 
24/05/23 21:05:32 :: ==>Retour de la requete: [
  [
    {
      id: 1,
      img_src: 'https://picsum.photos/id/1/800/300',
      img_alt: 'lien vers builder',
      description: 'Venez découvrir le builder !',
      button_text: 'Découvrir içi',
      createdAt: 2023-04-23T17:03:47.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:03:47.000Z,
      modifiedBy: 'site',
      navigate_to: 'builder',
      long_description: "Le builder est un outil qui permet de constuire sa config, il permet d'assurer la compatibilité entre les composants.\r\n" +
        "Et combiné avec le comparateur, c'est le meilleur moyen de faire une config au meilleur prix !"
    },
    {
      id: 2,
      img_src: 'https://picsum.photos/id/2/850/400',
      img_alt: 'lien vers page about',
      description: 'Venez découvrir qui nous-sommes !',
      button_text: 'Cliquez ici',
      createdAt: 2023-04-23T17:27:05.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:27:05.000Z,
      modifiedBy: 'site',
      navigate_to: 'about',
      long_description: ''
    },
    {
      id: 3,
      img_src: 'https://picsum.photos/id/3/850/500',
      img_alt: 'lien vers compare',
      description: 'Venez découvrir le comparateur ! Trouvez les meilleurs prix ',
      button_text: 'Trouver les meilleurs prix',
      createdAt: 2023-04-23T17:28:04.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:28:04.000Z,
      modifiedBy: 'site',
      navigate_to: 'compare',
      long_description: ''
    },
    {
      id: 4,
      img_src: 'https://picsum.photos/id/4/850/600',
      img_alt: 'lien vers test',
      description: 'hello world',
      button_text: 'hello',
      createdAt: 2023-04-23T17:29:09.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:29:09.000Z,
      modifiedBy: 'site',
      navigate_to: 'themes',
      long_description: ''
    }
  ]
] 
24/05/23 21:05:32 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:05:32 :: ---> Sortie de la method selectAll de carouselController // 
24/05/23 21:12:21 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:12:23 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:12:24 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:12:26 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:12:28 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:12:29 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:12:50 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:12:55 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:13:05 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:13:11 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:13:18 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:19:16 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:19:16 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:19:16 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:19:16 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:16 :: Nouvelle connection sur la database: pccompare 
24/05/23 21:19:16 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:19:16 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:19:16 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:19:16 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:19:16 :: // Appel de la method selectOneCustomer // 
24/05/23 21:19:16 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:16 :: ?? Nous tetons de chercher les infos de l'utilisateur avec l'id: 14 
24/05/23 21:19:16 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:16 :: => Requete appelée: SELECT customer.*, role.*, account.email
  FROM customer
  INNER JOIN role ON customer.Id_role = role.Id_role
  INNER JOIN account ON customer.Id_account = account.Id_account
  WHERE customer.Id_customer = ? AND customer.deletedBy IS NULL;
   
24/05/23 21:19:16 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur',
      email: 'maxence.allart@gmail.com'
    }
  ]
] 
24/05/23 21:19:16 :: ?? Nous avons trouvé l'utilisateur avec l'id 14: ses infos : {
  account: { email: 'maxence.allart@gmail.com' },
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: 2023-05-24T19:04:19.000Z,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: { title: 'Utilisateur' }
} 
24/05/23 21:19:16 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:16 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:16 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:16 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:16 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:16 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:19:16 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:16 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:16 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:16 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:16 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:16 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:19:16 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:21 :: // Appel de la method verifySentMail de registerController // 
24/05/23 21:19:21 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:21 :: ?? On a reçu comme TOKEN : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1heG9hNTlAZ21haWwuY29tIiwiaGFzaGVkUGFzc3dvcmQiOiI4cFRSSU51Z3hRNGVzem5nVGFlTHZ1d0liWEhSUTlGeHBGeGpmakdDZkJVS3FwcVR4WWFydSIsInBzZXVkbyI6IlNlY3V0byIsImZpcnN0bmFtZSI6ImFhYWFhYSIsImxhc3RuYW1lIjoiYmJiYmJiYiIsImlhdCI6MTY4NDk1MzUxNiwiZXhwIjoxNjg0OTU3MTE2fQ.BC7RVnqYCTmhEpUsCLEmnDKG4kqJl2Q3ANm5zW8aKrc 
24/05/23 21:19:21 :: Oops une erreur lors de la tentative de Query: Error: Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'
    at PromiseConnection.execute (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\node_modules\mysql2\promise.js:111:22)
    at query (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\services\database.service.js:34:37)
    at async Object.verifySentMail (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\registerController.js:117:22)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\register.js:12:5 {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sql: 'INSERT INTO account (email, password, createdBy) VALUES (?, ?, ?)',
  sqlState: '23000',
  sqlMessage: "Duplicata du champ 'maxoa59@gmail.com' pour la clef 'account.email'"
} 
24/05/23 21:19:21 :: XX Refus d'ajout de l'account ! 
24/05/23 21:19:51 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:19:51 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:19:51 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:19:51 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:51 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:19:51 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:19:51 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:19:51 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:19:51 :: ?? Nous tetons de chercher les infos de l'utilisateur avec l'id: 14 
24/05/23 21:19:51 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:51 :: // Appel de la method selectOneCustomer // 
24/05/23 21:19:51 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:51 :: => Requete appelée: SELECT customer.*, role.*, account.email
  FROM customer
  INNER JOIN role ON customer.Id_role = role.Id_role
  INNER JOIN account ON customer.Id_account = account.Id_account
  WHERE customer.Id_customer = ? AND customer.deletedBy IS NULL;
   
24/05/23 21:19:51 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:51 :: ?? Nous avons trouvé l'utilisateur avec l'id 14: ses infos : {
  account: { email: 'maxence.allart@gmail.com' },
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: 2023-05-24T19:04:19.000Z,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: { title: 'Utilisateur' }
} 
24/05/23 21:19:51 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur',
      email: 'maxence.allart@gmail.com'
    }
  ]
] 
24/05/23 21:19:51 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:51 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:51 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:51 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:51 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:19:51 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:51 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:51 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:51 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:51 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:51 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:19:51 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:55 :: ===================================================== 
24/05/23 21:19:55 :: // Appel de la method handleAuth de authController // 
24/05/23 21:19:55 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODQ5NTg2NTl9.S3Tvm01L2KMptm4pMwzv8A3fO6oclHnFZkvuo3WY-bY 
24/05/23 21:19:55 :: ==> Comparaison du accessTokenCookie avec la secret phrase en .env 
24/05/23 21:19:55 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:55 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:55 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:19:55 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:19:55 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:19:55 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:19:55 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:55 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:55 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:55 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:55 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:19:55 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:55 :: // Appel de la method selectOneCustomer // 
24/05/23 21:19:55 :: ?? Nous tetons de chercher les infos de l'utilisateur avec l'id: 14 
24/05/23 21:19:55 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:55 :: => Requete appelée: SELECT customer.*, role.*, account.email
  FROM customer
  INNER JOIN role ON customer.Id_role = role.Id_role
  INNER JOIN account ON customer.Id_account = account.Id_account
  WHERE customer.Id_customer = ? AND customer.deletedBy IS NULL;
   
24/05/23 21:19:55 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur',
      email: 'maxence.allart@gmail.com'
    }
  ]
] 
24/05/23 21:19:55 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:55 :: ?? Nous avons trouvé l'utilisateur avec l'id 14: ses infos : {
  account: { email: 'maxence.allart@gmail.com' },
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: 2023-05-24T19:04:19.000Z,
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: { title: 'Utilisateur' }
} 
24/05/23 21:19:55 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:19:55 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:19:55 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:19:55 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:55 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:55 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:55 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:55 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:55 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:19:55 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:55 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:55 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:55 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:55 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:55 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:19:57 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:19:57 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:19:57 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:19:57 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:19:57 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:57 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:19:57 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:57 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:19:57 :: // Appel de la method getAllFavoriteByIdCustomer de favoriteController// 
24/05/23 21:19:57 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:57 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:19:57 :: => Requete appelée: 
      SELECT ca.*, a.*, c.*
      FROM customer_article ca
      JOIN article a ON ca.Id_article = a.Id_article
      JOIN model m ON a.Id_model = m.Id_model
      JOIN category c ON m.Id_category = c.Id_category
      WHERE ca.Id_customer = ?;
          
       
24/05/23 21:19:57 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 14,
      Id_article: 2,
      product_number: 'GV-N4090GAMING OC-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9743-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING OC',
      Id_model: 1,
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique'
    }
  ]
] 
24/05/23 21:19:57 :: ---> Sortie de la method getAllFavoriteByIdCustomer de favoriteController // 
24/05/23 21:19:57 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:57 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:19:57 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:19:57 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4ZW5jZS5hbGxhcnRAZ21haWwuY29tIiwiY3VzdG9tZXIiOnsiSWRfYWNjb3VudCI6MTYsIklkX2N1c3RvbWVyIjoxNCwiSWRfcm9sZSI6MSwicHNldWRvIjoiQm9iYnkiLCJmaXJzdG5hbWUiOiJhYWFhYWFhYWFhIiwibGFzdG5hbWUiOiJiYmJiYmJiYmJiIiwibGFzdF9jb25uZWN0aW9uIjoiMjAyMy0wNS0yNFQxOTowMzoyNy4wMDBaIiwiY3JlYXRlZEJ5Ijoic2l0ZSIsImNyZWF0ZWRBdCI6bnVsbCwibW9kaWZpZWRCeSI6bnVsbCwibW9kaWZpZWRBdCI6bnVsbCwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTI0VDE5LTA0LTAzLjgxN1otSU1HXzIwMjAwNjIwXzIyMTczOS5qcGcifSwicm9sZSI6IlV0aWxpc2F0ZXVyIiwiaWF0IjoxNjg0OTU1MDU5LCJleHAiOjE2ODU4MTkwNTl9.64kg8hH9BDmlH6aT0pocIZ8Uc95MI7H_ZmsqqI1gArY 
24/05/23 21:19:57 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:19:57 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:57 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:19:57 :: ==>Retour de la requete: [
  [
    {
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      Id_customer: 14,
      pseudo: 'Bobby',
      firstname: 'aaaaaaaaaa',
      lastname: 'bbbbbbbbbb',
      last_connection: 2023-05-24T19:04:19.000Z,
      createdBy: 'site',
      createdAt: null,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null,
      Id_account: 16,
      Id_role: 1,
      img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg',
      title: 'Utilisateur'
    }
  ]
] 
24/05/23 21:19:57 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:57 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxence.allart@gmail.com","customer":{"Id_account":16,"Id_customer":14,"Id_role":1,"pseudo":"Bobby","firstname":"aaaaaaaaaa","lastname":"bbbbbbbbbb","last_connection":"2023-05-24T19:04:19.000Z","createdBy":"site","createdAt":null,"modifiedBy":null,"modifiedAt":null,"deletedBy":null,"deletedAt":null,"img_src":"2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg"},"role":"Utilisateur"} 
24/05/23 21:19:57 :: // Appel de la méthode getAllCommentsByIdCustomer de commentsController // 
24/05/23 21:19:57 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:57 :: => Requete appelée: 
        SELECT c.*, a.*, cat.*
        FROM comment c
        JOIN article a ON c.Id_article = a.Id_article
        JOIN model m ON a.Id_model = m.Id_model
        JOIN category cat ON m.Id_category = cat.Id_category
        WHERE c.Id_customer = ?
         
24/05/23 21:19:57 :: ==>Retour de la requete: [
  [
    {
      Id_comment: 41,
      content: 'Le top !!!!!!!',
      note: 4,
      createdBy: 'Bobby',
      deletedBy: null,
      modifiedBy: null,
      createdAt: 2023-05-24T19:03:49.000Z,
      deletedAt: null,
      modifiedAt: null,
      Id_customer: 14,
      Id_article: 2,
      product_number: 'GV-N4090GAMING OC-24GD',
      designation: 'GIGABYTE RTX 4090 GAMING OC',
      marque: 'GIGABYTE',
      img_src: 'https://tpucdn.com/gpu-specs/images/b/9743-front.jpg',
      img_alt: 'GIGABYTE RTX 4090 GAMING OC',
      Id_model: 1,
      Id_category: 1,
      category_name: 'Cartes Graphique',
      code: 'gpu',
      img_src_category: null,
      img_alt_category: 'Cartes Graphique'
    }
  ]
] 
24/05/23 21:19:57 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:58 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:58 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:58 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:58 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:58 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:19:58 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:58 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:19:58 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:19:58 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:19:58 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:19:58 :: ==>Retour de la requete: [ [ { img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg' } ] ] 
24/05/23 21:19:58 :: Un avatar pour l'Id_customer 14 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\14\2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg. 
24/05/23 21:20:01 :: ------------------------------------------------------- 
24/05/23 21:20:01 :: // Appel de la method handleLogout de loginController // 
24/05/23 21:20:01 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxence.allart@gmail.com',
  customer: {
    Id_account: 16,
    Id_customer: 14,
    Id_role: 1,
    pseudo: 'Bobby',
    firstname: 'aaaaaaaaaa',
    lastname: 'bbbbbbbbbb',
    last_connection: '2023-05-24T19:03:27.000Z',
    createdBy: 'site',
    createdAt: null,
    modifiedBy: null,
    modifiedAt: null,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-24T19-04-03.817Z-IMG_20200620_221739.jpg'
  },
  role: 'Utilisateur',
  iat: 1684955059,
  exp: 1685819059
} 
24/05/23 21:20:02 :: +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
24/05/23 21:20:02 :: // Appel de la method handleLogin de loginController // 
24/05/23 21:20:02 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:02 :: => Requete appelée:         
      SELECT account.email, account.password, customer.*, role.*
      FROM account
      JOIN customer ON account.Id_account = customer.Id_account
      JOIN role ON customer.Id_role = role.Id_role
      WHERE account.email = ?
       
24/05/23 21:20:02 :: ==>Retour de la requete: [
  [
    {
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T18:06:28.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg',
      title: 'Administrateur'
    }
  ]
] 
24/05/23 21:20:02 :: ?? L'account trouvé est: {
  email: 'maxoa59@gmail.com',
  password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi'
} 
24/05/23 21:20:02 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:02 :: ?? Le customer trouvé est: {
  Id_account: 6,
  Id_customer: 6,
  Id_role: 3,
  pseudo: 'Secu',
  firstname: 'Maxence',
  lastname: 'ALLART',
  last_connection: 2023-05-24T18:06:28.000Z,
  createdBy: 'site',
  createdAt: 2023-04-26T22:00:00.000Z,
  modifiedBy: 'Secutorz',
  modifiedAt: 2023-05-20T22:00:00.000Z,
  deletedBy: null,
  deletedAt: null,
  img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
} 
24/05/23 21:20:02 :: ?? Le role trouvé est: { title: 'Administrateur' } 
24/05/23 21:20:02 :: !! Comparons le mots de passe reçu le résultat est : true 
24/05/23 21:20:02 :: ?? Tentative de mise à jour de la last_connection 
24/05/23 21:20:02 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:02 :: => Requete appelée: 
      UPDATE customer
      SET last_connection = NOW()
      WHERE Id_customer = ?;
       
24/05/23 21:20:02 :: ==>Retour de la requete: [
  ResultSetHeader {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    info: 'Enregistrements correspondants: 1  Modifiés: 1  Warnings: 0',
    serverStatus: 2,
    warningStatus: 0
  }
] 
24/05/23 21:20:02 :: --> last_connection mis à jour avec succès. 
24/05/23 21:20:02 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:02 :: ?? Pour information, un accessToken a été créé pour 1h : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDY6MjguMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTU2MDAyLCJleHAiOjE2ODQ5NTk2MDJ9.Lsr0S31hVZPY5-tlVcVW9_4P3mtvNi-qwWckO8hCS64 
24/05/23 21:20:02 :: !! L'objet préparé pour le retour au Front est le suivant : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: 2023-05-24T18:06:28.000Z,
    createdBy: 'site',
    createdAt: 2023-04-26T22:00:00.000Z,
    modifiedBy: 'Secutorz',
    modifiedAt: 2023-05-20T22:00:00.000Z,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur'
} 
24/05/23 21:20:02 :: ==> Login avec succes ! Envoi du refreshToken en cookie, envoi des données + envoi du accessToken. 
24/05/23 21:20:02 :: ?? Pour information, un refreshToken a été créé pour 10d : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDY6MjguMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTU2MDAyLCJleHAiOjE2ODU4MjAwMDJ9.4cRFsthDvCRoYf-bEkBQIwbXjjuAa8NaLnsa2Xim4kg 
24/05/23 21:20:02 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:20:02 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:02 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:20:02 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:20:02 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:02 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:20:06 :: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
24/05/23 21:20:06 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50IjoibWF4b2E1OUBnbWFpbC5jb20iLCJjdXN0b21lciI6eyJJZF9hY2NvdW50Ijo2LCJJZF9jdXN0b21lciI6NiwiSWRfcm9sZSI6MywicHNldWRvIjoiU2VjdSIsImZpcnN0bmFtZSI6Ik1heGVuY2UiLCJsYXN0bmFtZSI6IkFMTEFSVCIsImxhc3RfY29ubmVjdGlvbiI6IjIwMjMtMDUtMjRUMTg6MDY6MjguMDAwWiIsImNyZWF0ZWRCeSI6InNpdGUiLCJjcmVhdGVkQXQiOiIyMDIzLTA0LTI2VDIyOjAwOjAwLjAwMFoiLCJtb2RpZmllZEJ5IjoiU2VjdXRvcnoiLCJtb2RpZmllZEF0IjoiMjAyMy0wNS0yMFQyMjowMDowMC4wMDBaIiwiZGVsZXRlZEJ5IjpudWxsLCJkZWxldGVkQXQiOm51bGwsImltZ19zcmMiOiIyMDIzLTA1LTIzVDE4LTI4LTU3Ljc5MlotSU1HXzIwMjAwNjAzXzE3MTYyOC5qcGcifSwicm9sZSI6IkFkbWluaXN0cmF0ZXVyIiwiaWF0IjoxNjg0OTU2MDAyLCJleHAiOjE2ODU4MjAwMDJ9.4cRFsthDvCRoYf-bEkBQIwbXjjuAa8NaLnsa2Xim4kg 
24/05/23 21:20:06 :: // Rentrée dans le middleware verifyRefreshToken // 
24/05/23 21:20:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:06 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: '2023-05-24T18:06:28.000Z',
    createdBy: 'site',
    createdAt: '2023-04-26T22:00:00.000Z',
    modifiedBy: 'Secutorz',
    modifiedAt: '2023-05-20T22:00:00.000Z',
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur',
  iat: 1684956002,
  exp: 1685820002
} 
24/05/23 21:20:06 :: => Requete appelée:         
          SELECT account.email, account.password, customer.*, role.*
          FROM account
          JOIN customer ON account.Id_account = customer.Id_account
          JOIN role ON customer.Id_role = role.Id_role
          WHERE account.email = ?
           
24/05/23 21:20:06 :: ==>Retour de la requete: [
  [
    {
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T19:20:02.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg',
      title: 'Administrateur'
    }
  ]
] 
24/05/23 21:20:06 :: ?? On rajoute au REQ pour utilisation futures : {"account":"maxoa59@gmail.com","customer":{"Id_account":6,"Id_customer":6,"Id_role":3,"pseudo":"Secu","firstname":"Maxence","lastname":"ALLART","last_connection":"2023-05-24T19:20:02.000Z","createdBy":"site","createdAt":"2023-04-26T22:00:00.000Z","modifiedBy":"Secutorz","modifiedAt":"2023-05-20T22:00:00.000Z","deletedBy":null,"deletedAt":null,"img_src":"2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg"},"role":"Administrateur"} 
24/05/23 21:20:06 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:06 :: ?? Nous tetons de chercher les infos de l'utilisateur avec l'id: 6 
24/05/23 21:20:06 :: // Appel de la method selectOneCustomer // 
24/05/23 21:20:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:06 :: => Requete appelée: SELECT customer.*, role.*, account.email
  FROM customer
  INNER JOIN role ON customer.Id_role = role.Id_role
  INNER JOIN account ON customer.Id_account = account.Id_account
  WHERE customer.Id_customer = ? AND customer.deletedBy IS NULL;
   
24/05/23 21:20:06 :: ==>Retour de la requete: [
  [
    {
      Id_customer: 6,
      pseudo: 'Secu',
      firstname: 'Maxence',
      lastname: 'ALLART',
      last_connection: 2023-05-24T19:20:02.000Z,
      createdBy: 'site',
      createdAt: 2023-04-26T22:00:00.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'Secutorz',
      modifiedAt: 2023-05-20T22:00:00.000Z,
      Id_account: 6,
      Id_role: 3,
      img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg',
      title: 'Administrateur',
      email: 'maxoa59@gmail.com'
    }
  ]
] 
24/05/23 21:20:06 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:06 :: ?? Nous avons trouvé l'utilisateur avec l'id 6: ses infos : {
  account: { email: 'maxoa59@gmail.com' },
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: 2023-05-24T19:20:02.000Z,
    createdBy: 'site',
    createdAt: 2023-04-26T22:00:00.000Z,
    modifiedBy: 'Secutorz',
    modifiedAt: 2023-05-20T22:00:00.000Z,
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: { title: 'Administrateur' }
} 
24/05/23 21:20:06 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:20:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:06 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:20:06 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:20:06 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:06 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:20:06 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:20:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:06 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:20:06 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:20:06 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:20:06 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:14 :: // Appel de la method selectAll de carouselController// 
24/05/23 21:20:14 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:14 :: => Requete appelée: SELECT * FROM carousel WHERE deletedBy = 0 
24/05/23 21:20:14 :: ==>Retour de la requete: [
  [
    {
      id: 1,
      img_src: 'https://picsum.photos/id/1/800/300',
      img_alt: 'lien vers builder',
      description: 'Venez découvrir le builder !',
      button_text: 'Découvrir içi',
      createdAt: 2023-04-23T17:03:47.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:03:47.000Z,
      modifiedBy: 'site',
      navigate_to: 'builder',
      long_description: "Le builder est un outil qui permet de constuire sa config, il permet d'assurer la compatibilité entre les composants.\r\n" +
        "Et combiné avec le comparateur, c'est le meilleur moyen de faire une config au meilleur prix !"
    },
    {
      id: 2,
      img_src: 'https://picsum.photos/id/2/850/400',
      img_alt: 'lien vers page about',
      description: 'Venez découvrir qui nous-sommes !',
      button_text: 'Cliquez ici',
      createdAt: 2023-04-23T17:27:05.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:27:05.000Z,
      modifiedBy: 'site',
      navigate_to: 'about',
      long_description: ''
    },
    {
      id: 3,
      img_src: 'https://picsum.photos/id/3/850/500',
      img_alt: 'lien vers compare',
      description: 'Venez découvrir le comparateur ! Trouvez les meilleurs prix ',
      button_text: 'Trouver les meilleurs prix',
      createdAt: 2023-04-23T17:28:04.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:28:04.000Z,
      modifiedBy: 'site',
      navigate_to: 'compare',
      long_description: ''
    },
    {
      id: 4,
      img_src: 'https://picsum.photos/id/4/850/600',
      img_alt: 'lien vers test',
      description: 'hello world',
      button_text: 'hello',
      createdAt: 2023-04-23T17:29:09.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:29:09.000Z,
      modifiedBy: 'site',
      navigate_to: 'themes',
      long_description: ''
    }
  ]
] 
24/05/23 21:20:14 :: ---> Sortie de la method selectAll de carouselController // 
24/05/23 21:20:14 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:15 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:20:15 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:15 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:20:15 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:20:15 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:15 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:20:15 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:15 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:20:15 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:20:15 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:20:15 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:15 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:20:31 :: // Appel de la method selectAll de carouselController// 
24/05/23 21:20:31 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:31 :: => Requete appelée: SELECT * FROM carousel WHERE deletedBy = 0 
24/05/23 21:20:31 :: ==>Retour de la requete: [
  [
    {
      id: 1,
      img_src: 'https://picsum.photos/id/1/800/300',
      img_alt: 'lien vers builder',
      description: 'Venez découvrir le builder !',
      button_text: 'Découvrir içi',
      createdAt: 2023-04-23T17:03:47.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:03:47.000Z,
      modifiedBy: 'site',
      navigate_to: 'builder',
      long_description: "Le builder est un outil qui permet de constuire sa config, il permet d'assurer la compatibilité entre les composants.\r\n" +
        "Et combiné avec le comparateur, c'est le meilleur moyen de faire une config au meilleur prix !"
    },
    {
      id: 2,
      img_src: 'https://picsum.photos/id/2/850/400',
      img_alt: 'lien vers page about',
      description: 'Venez découvrir qui nous-sommes !',
      button_text: 'Cliquez ici',
      createdAt: 2023-04-23T17:27:05.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:27:05.000Z,
      modifiedBy: 'site',
      navigate_to: 'about',
      long_description: ''
    },
    {
      id: 3,
      img_src: 'https://picsum.photos/id/3/850/500',
      img_alt: 'lien vers compare',
      description: 'Venez découvrir le comparateur ! Trouvez les meilleurs prix ',
      button_text: 'Trouver les meilleurs prix',
      createdAt: 2023-04-23T17:28:04.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:28:04.000Z,
      modifiedBy: 'site',
      navigate_to: 'compare',
      long_description: ''
    },
    {
      id: 4,
      img_src: 'https://picsum.photos/id/4/850/600',
      img_alt: 'lien vers test',
      description: 'hello world',
      button_text: 'hello',
      createdAt: 2023-04-23T17:29:09.000Z,
      createdBy: 'site',
      deletedAt: null,
      deletedBy: '0',
      modifiedAt: 2023-04-23T17:29:09.000Z,
      modifiedBy: 'site',
      navigate_to: 'themes',
      long_description: ''
    }
  ]
] 
24/05/23 21:20:31 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:31 :: ---> Sortie de la method selectAll de carouselController // 
24/05/23 21:20:33 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:20:33 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:33 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:20:33 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:20:33 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:33 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:20:33 :: // Appel de la méthode downloadAvatarByIdCustomer de avatarController// 
24/05/23 21:20:33 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:33 :: => Requete appelée: SELECT img_src FROM customer WHERE Id_customer = ? 
24/05/23 21:20:33 :: ==>Retour de la requete: [ [ { img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg' } ] ] 
24/05/23 21:20:33 :: Un avatar pour l'Id_customer 6 a été trouvé à l'url suivante C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\uploads\avatars\6\2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg. 
24/05/23 21:20:33 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:38 :: ------------------------------------------------------- 
24/05/23 21:20:38 :: // Appel de la method handleLogout de loginController // 
24/05/23 21:20:38 :: ?? Décodage du refreshToken avec les informations suivantes : {
  account: 'maxoa59@gmail.com',
  customer: {
    Id_account: 6,
    Id_customer: 6,
    Id_role: 3,
    pseudo: 'Secu',
    firstname: 'Maxence',
    lastname: 'ALLART',
    last_connection: '2023-05-24T18:06:28.000Z',
    createdBy: 'site',
    createdAt: '2023-04-26T22:00:00.000Z',
    modifiedBy: 'Secutorz',
    modifiedAt: '2023-05-20T22:00:00.000Z',
    deletedBy: null,
    deletedAt: null,
    img_src: '2023-05-23T18-28-57.792Z-IMG_20200603_171628.jpg'
  },
  role: 'Administrateur',
  iat: 1684956002,
  exp: 1685820002
} 
24/05/23 21:20:52 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:20:52 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:20:52 :: ==>Retour de la requete: [
  [
    {
      Id_account: 6,
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      createdBy: 'site',
      createdAt: 2023-05-02T20:22:08.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'site',
      modifiedAt: 2023-05-23T18:51:52.000Z
    }
  ]
] 
24/05/23 21:20:52 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:20:52 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:20:52 :: XX Erreur dans resetPassword : ReferenceError: jwtToken is not defined
    at Object.resetPassword (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\resetController.js:54:62)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\reset.js:9:3 
24/05/23 21:21:41 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:21:48 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:21:48 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:21:48 :: Nouvelle connection sur la database: pccompare 
24/05/23 21:21:48 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:21:48 :: ==>Retour de la requete: [
  [
    {
      Id_account: 6,
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      createdBy: 'site',
      createdAt: 2023-05-02T20:22:08.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'site',
      modifiedAt: 2023-05-23T18:51:52.000Z
    }
  ]
] 
24/05/23 21:21:48 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:21:48 :: // Tentative d'envoi de mail : // 
24/05/23 21:21:49 :: §§ MAIL :  Envoyé 
24/05/23 21:21:49 :: !! Retour du mailer : {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 93,
    messageTime: 459,
    messageSize: 2317,
    response: '250 2.0.0 OK  1684956109 l6-20020adfe9c6000000b0030631f199f9sm15287846wrn.34 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<e3275e0a-be03-f3e2-a3c6-120a40e91a09@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 21:23:11 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:23:15 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:23:24 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:23:25 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:24:14 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:24:23 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:24:23 :: Nouvelle connection sur la database: pccompare 
24/05/23 21:24:23 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:24:23 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:24:23 :: ==>Retour de la requete: [
  [
    {
      Id_account: 6,
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      createdBy: 'site',
      createdAt: 2023-05-02T20:22:08.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'site',
      modifiedAt: 2023-05-23T18:51:52.000Z
    }
  ]
] 
24/05/23 21:24:23 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:24:23 :: // Tentative d'envoi de mail : // 
24/05/23 21:24:24 :: §§ MAIL :  Envoyé 
24/05/23 21:24:24 :: !! Retour du mailer : {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 61,
    messageTime: 286,
    messageSize: 2008,
    response: '250 2.0.0 OK  1684956264 d6-20020a5d6446000000b00307a83ea722sm15375319wrw.58 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<add39383-aeae-a2e3-a693-2b0c0bb5d3fb@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 21:25:58 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:25:58 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:25:58 :: ==>Retour de la requete: [
  [
    {
      Id_account: 6,
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      createdBy: 'site',
      createdAt: 2023-05-02T20:22:08.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'site',
      modifiedAt: 2023-05-23T18:51:52.000Z
    }
  ]
] 
24/05/23 21:25:58 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:25:58 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:25:58 :: // Tentative d'envoi de mail : // 
24/05/23 21:25:59 :: §§ MAIL :  Envoyé 
24/05/23 21:25:59 :: !! Retour du mailer : {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 58,
    messageTime: 278,
    messageSize: 2008,
    response: '250 2.0.0 OK  1684956359 p22-20020a7bcc96000000b003f1751016desm3323450wma.28 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<537589c6-e4e9-6059-3417-f0c212929788@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 21:26:39 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:26:39 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:26:39 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:26:39 :: ==>Retour de la requete: [
  [
    {
      Id_account: 6,
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      createdBy: 'site',
      createdAt: 2023-05-02T20:22:08.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'site',
      modifiedAt: 2023-05-23T18:51:52.000Z
    }
  ]
] 
24/05/23 21:26:39 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:26:39 :: // Tentative d'envoi de mail : // 
24/05/23 21:26:40 :: §§ MAIL :  Envoyé 
24/05/23 21:26:40 :: !! Retour du mailer : {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 57,
    messageTime: 358,
    messageSize: 2008,
    response: '250 2.0.0 OK  1684956400 x4-20020a05600c21c400b003f0aefcc457sm3274806wmj.45 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<e78bf728-cc0f-35a8-c366-47c5ea20a92d@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 21:26:52 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:26:52 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:26:52 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:26:52 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:26:52 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:26:52 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:27:21 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:27:21 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:27:21 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:27:21 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:27:21 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:27:21 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:27:48 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:27:48 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:27:48 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:27:48 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:27:48 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:27:48 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:28:27 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:28:29 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:28:40 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:28:40 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:28:40 :: Nouvelle connection sur la database: pccompare 
24/05/23 21:28:40 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:28:40 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:28:40 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:28:40 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:29:08 :: ===================================================== 
24/05/23 21:29:08 :: // Appel de la method handleAuth de authController // 
24/05/23 21:29:08 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 21:29:08 :: XX Pas de cookie accessToken reçu. 
24/05/23 21:29:08 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 21:29:08 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 21:29:08 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 21:29:08 :: XX Pas de cookie refreshToken reçu. 
24/05/23 21:29:12 :: ===================================================== 
24/05/23 21:29:12 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 21:29:12 :: // Appel de la method handleAuth de authController // 
24/05/23 21:29:12 :: XX Pas de cookie accessToken reçu. 
24/05/23 21:29:12 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 21:29:12 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 21:29:12 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 21:29:12 :: XX Pas de cookie refreshToken reçu. 
24/05/23 21:29:15 :: ===================================================== 
24/05/23 21:29:15 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 21:29:15 :: // Appel de la method handleAuth de authController // 
24/05/23 21:29:15 :: XX Pas de cookie accessToken reçu. 
24/05/23 21:29:15 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 21:29:15 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 21:29:15 :: XX Pas de cookie refreshToken reçu. 
24/05/23 21:29:15 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 21:29:18 :: ===================================================== 
24/05/23 21:29:18 :: XX Pas de cookie accessToken reçu. 
24/05/23 21:29:18 :: // Appel de la method handleAuth de authController // 
24/05/23 21:29:18 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.accessToken : undefined 
24/05/23 21:29:18 :: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
24/05/23 21:29:18 :: ?? Vérification de la réception en cookie, on a reçu en req?.cookies?.refreshToken : undefined 
24/05/23 21:29:18 :: // Appel de la method handleRefreshToken de refreshTokenController // 
24/05/23 21:29:18 :: XX Pas de cookie refreshToken reçu. 
24/05/23 21:29:35 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:29:35 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:29:35 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:29:35 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:29:35 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:29:35 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:30:08 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:30:16 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:30:16 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:30:16 :: Nouvelle connection sur la database: pccompare 
24/05/23 21:30:16 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:30:16 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:30:16 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:30:16 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:30:16 :: XX Erreur dans resetPassword : ReferenceError: error is not defined
    at Object.resetPassword (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\resetController.js:73:104)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\reset.js:9:3 
24/05/23 21:31:06 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:31:06 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:31:06 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:31:07 :: ==>Retour de la requete: [
  [
    {
      Id_account: 6,
      email: 'maxoa59@gmail.com',
      password: 'uGcayiOsCZgWfnFtadIEv.VD1ttvDsPpAZOqjusSyeuMHlsBbUooi',
      createdBy: 'site',
      createdAt: 2023-05-02T20:22:08.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: 'site',
      modifiedAt: 2023-05-23T18:51:52.000Z
    }
  ]
] 
24/05/23 21:31:07 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:31:07 :: // Tentative d'envoi de mail : // 
24/05/23 21:31:07 :: §§ MAIL :  Envoyé 
24/05/23 21:31:07 :: !! Retour du mailer : {
  data: {
    accepted: [ 'maxoa59@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 68,
    messageTime: 286,
    messageSize: 2008,
    response: '250 2.0.0 OK  1684956667 q21-20020a1ce915000000b003f421979398sm3247087wmc.26 - gsmtp',
    envelope: { from: '', to: [ 'maxoa59@gmail.com' ] },
    messageId: '<7523d715-65d6-c8e2-b2ec-408bf95b1172@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
24/05/23 21:31:58 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:31:58 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:31:58 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:31:58 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:31:58 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:31:58 :: XX Erreur dans resetPassword : ReferenceError: error is not defined
    at Object.resetPassword (C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\controllers\v1\login\resetController.js:73:104)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async C:\Users\cQpro Fixe\Desktop\Work\Project File Rouge\v3\newBackendApi\routes\v1\login\reset.js:9:3 
24/05/23 21:31:58 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:33:17 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:33:23 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:33:30 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:33:45 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:33:50 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:33:54 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:33:54 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:33:54 :: Nouvelle connection sur la database: pccompare 
24/05/23 21:33:54 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:33:54 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:33:54 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:33:54 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:33:59 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:33:59 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:33:59 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:33:59 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:33:59 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:33:59 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:34:44 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:35:20 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:35:22 :: Ouverture d'un port d'écoute sur : 5050 
24/05/23 21:35:25 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:35:25 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:35:25 :: Nouvelle connection sur la database: pccompare 
24/05/23 21:35:25 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:35:25 :: ==>Retour de la requete: [ [] ] 
24/05/23 21:35:25 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:35:25 :: XX Aucun compte avec l'email maxoa59@gmail.comz ! 
24/05/23 21:35:43 :: // Appel de la method resetPassword de resetController // 
24/05/23 21:35:43 :: // Appel de la method QUERY de database.service. // 
24/05/23 21:35:43 :: => Requete appelée: SELECT * FROM account WHERE email = ? 
24/05/23 21:35:43 :: ==>Retour de la requete: [
  [
    {
      Id_account: 16,
      email: 'maxence.allart@gmail.com',
      password: 'qu0jQCzB8hh/U8iFIRlswOrjzjEo6mM.584j4u/MrJK1KQL1xvKVi',
      createdBy: 'site',
      createdAt: 2023-05-24T18:58:23.000Z,
      deletedBy: null,
      deletedAt: null,
      modifiedBy: null,
      modifiedAt: null
    }
  ]
] 
24/05/23 21:35:43 :: ---> Sortie de la method QUERY de database.service. // 
24/05/23 21:35:43 :: // Tentative d'envoi de mail : // 
24/05/23 21:35:44 :: §§ MAIL :  Envoyé 
24/05/23 21:35:44 :: !! Retour du mailer : {
  data: {
    accepted: [ 'maxence.allart@gmail.com' ],
    rejected: [],
    ehlo: [
      'SIZE 35882577',
      '8BITMIME',
      'AUTH LOGIN PLAIN XOAUTH2 PLAIN-CLIENTTOKEN OAUTHBEARER XOAUTH',
      'ENHANCEDSTATUSCODES',
      'PIPELINING',
      'CHUNKING',
      'SMTPUTF8'
    ],
    envelopeTime: 71,
    messageTime: 309,
    messageSize: 2031,
    response: '250 2.0.0 OK  1684956944 l6-20020adfe9c6000000b0030631f199f9sm15316539wrn.34 - gsmtp',
    envelope: { from: '', to: [ 'maxence.allart@gmail.com' ] },
    messageId: '<a072c33c-ebfc-c4af-53cd-f457e3518608@localhost>'
  },
  result: true,
  message: 'Email envoyé'
} 
